   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_usic.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_USIC_CH_SetInputTriggerCombinationMode,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_USIC_CH_SetInputTriggerCombinationMode:
  23              	.LFB61:
  24              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2019-07-01
   4:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  77:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  78:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  79:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
  80:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  81:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  82:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
  83:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  84:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  85:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  86:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  87:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  88:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
  89:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-07-01:
  90:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Changed XMC_USIC_CH_SetBaudrateEx() input parameter types
  91:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
  92:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  93:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
  94:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
  95:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
  96:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  97:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  98:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  99:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
 100:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 101:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 102:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 103:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 104:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 105:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 106:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 107:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 108:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 109:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 110:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 111:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 112:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 113:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 114:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 115:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 116:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 117:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 118:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 119:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 120:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 121:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 122:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 123:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 124:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 125:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 126:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 127:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 128:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 129:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 130:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 131:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 132:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 133:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 134:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 135:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 136:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 137:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 138:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 139:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 140:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 141:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 142:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 143:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 144:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 145:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 146:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 147:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 148:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 149:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 150:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 151:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 152:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 153:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 154:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 155:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 156:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 157:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 158:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 159:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 160:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 161:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 162:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 163:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 164:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 165:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 166:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 167:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 168:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 169:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 170:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 171:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 172:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 173:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 174:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 175:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 176:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 177:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 178:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 179:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 180:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 181:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 182:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 183:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 184:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 185:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 186:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 187:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 188:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 189:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 190:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 191:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 192:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 193:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 194:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 195:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 196:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 197:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 198:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 199:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 200:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 201:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 202:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 203:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 204:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 205:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 206:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 207:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 208:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 209:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 210:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 211:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 212:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 213:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 214:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 215:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 216:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 217:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 218:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 219:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 220:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 221:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 222:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 223:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 224:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 225:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 226:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 227:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 228:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 229:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 230:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 231:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 232:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 233:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 234:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 235:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 236:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 237:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 238:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 239:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 240:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 241:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 242:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 243:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 244:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 245:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 246:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 247:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 248:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 249:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 250:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 251:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 252:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 253:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 254:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 255:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 256:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 257:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 258:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 259:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 260:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 261:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 262:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 263:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 264:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 265:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 266:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 267:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 268:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 269:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 270:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 271:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 272:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 273:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 274:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 275:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 276:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 277:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 278:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 279:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 280:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 281:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 282:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 283:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 284:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 285:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 286:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 287:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 288:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 289:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 290:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 291:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 292:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 293:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 294:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 295:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 296:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 297:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 298:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 299:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 300:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 301:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 303:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 304:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 305:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 306:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 307:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 308:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 309:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 310:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 311:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 312:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 313:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 314:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 315:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 316:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 317:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 318:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 319:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 320:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 321:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 322:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 323:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 324:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 325:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 326:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 327:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 328:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 329:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 330:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 332:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 333:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 334:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 335:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 336:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 337:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 338:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 339:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 340:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 341:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 342:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 343:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 344:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 345:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 346:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 347:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 348:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 349:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 350:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 351:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 352:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 353:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 354:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 355:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 356:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 357:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 358:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 359:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 360:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 361:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 362:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 363:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 364:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 365:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 366:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 367:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 368:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 369:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 370:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 371:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 372:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 373:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 374:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 375:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 376:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 377:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 378:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 379:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 380:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 381:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 382:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 383:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 384:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 385:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 386:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 387:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 388:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 389:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 390:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 391:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 392:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 393:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 394:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 395:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 396:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 397:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 398:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 399:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 400:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 401:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 402:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 403:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 404:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 405:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 406:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 407:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 408:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 409:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 410:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 411:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 412:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 413:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 414:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 415:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 416:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 417:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 418:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 419:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 420:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 421:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 422:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 423:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 424:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 425:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 426:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 427:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 428:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 431:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 433:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 435:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 436:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 437:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 438:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 439:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 440:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 441:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 442:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 443:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 444:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 445:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 446:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 447:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 448:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 449:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 450:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 451:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 452:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 453:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 454:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 455:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 456:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 457:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 458:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 459:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 460:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 461:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** */
 462:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 463:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 464:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 465:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 466:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 467:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 468:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 469:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 470:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 471:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 472:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 473:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 474:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 475:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 476:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 477:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 478:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 479:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 480:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 481:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 482:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 483:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 484:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 485:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 486:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 487:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 488:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 489:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 490:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 491:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 492:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 493:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 494:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 495:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 496:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 497:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 498:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 499:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 500:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 501:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 502:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 503:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 504:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 505:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 506:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 507:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 508:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 509:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 510:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 511:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 512:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   };
 513:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 514:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 515:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 516:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 517:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 518:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 519:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 520:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 521:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 522:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   };
 523:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 524:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 525:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 526:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 527:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 528:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 529:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 530:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 531:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 532:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 533:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 534:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 535:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 536:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 537:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 538:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 539:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 540:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 541:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 542:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 543:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 544:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 545:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 546:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 547:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 548:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 549:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 550:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 551:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 552:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 553:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 554:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 555:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 556:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 557:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 558:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 559:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 560:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 561:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 562:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 563:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 564:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 565:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 566:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 567:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 568:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 569:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 570:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 571:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 572:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 573:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 574:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 575:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** }
 576:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 577:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 578:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 579:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 580:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 581:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 582:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 583:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 584:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 585:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 586:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 587:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 588:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 589:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 590:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** }
 591:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 592:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 593:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 594:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 595:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 596:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 597:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 598:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 599:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 600:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 601:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 602:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 603:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 604:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 605:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 606:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 607:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 608:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 609:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 610:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 611:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 612:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 613:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 614:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 615:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 616:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 617:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 618:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 619:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 620:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 621:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 622:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 623:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 624:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 625:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 626:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 627:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 628:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 629:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 630:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 631:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 632:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 633:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 634:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 635:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 636:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 637:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 638:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 639:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 640:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 641:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 642:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 643:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 644:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 645:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 646:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 647:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 648:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 649:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 650:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 651:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 652:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 653:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 654:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 655:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 656:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 657:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 658:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 659:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 660:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 661:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 662:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 663:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 664:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 665:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 666:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 667:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 668:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 669:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 670:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 671:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 672:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 673:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 674:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 675:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 676:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 677:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 678:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 679:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 680:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 681:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 682:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 683:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 684:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 685:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 686:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 687:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 688:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 689:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 690:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 691:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 692:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 693:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 694:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 695:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 696:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 697:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 698:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 699:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 700:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 701:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 702:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 703:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 704:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 705:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 706:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 707:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 708:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 709:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 710:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 711:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 712:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 713:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 714:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 715:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 716:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 717:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 718:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 719:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 720:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 721:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 722:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 723:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 724:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 725:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 726:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 727:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 728:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 729:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 730:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 731:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 732:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 733:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 734:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 735:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 736:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 737:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 738:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 739:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 740:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 741:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 742:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 743:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 744:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 745:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 746:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 747:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 748:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 749:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 750:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 751:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 752:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 753:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 754:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 755:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 756:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 757:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 758:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 759:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 760:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 761:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 762:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 763:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 764:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 765:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 766:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 767:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 768:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 769:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 770:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 771:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 772:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 773:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 774:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 775:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 776:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 777:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 778:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 779:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 780:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 781:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 782:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 783:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 784:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 785:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 786:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 787:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 788:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 789:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** }
 790:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 791:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 792:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 793:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 794:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 795:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 796:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 797:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 798:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 799:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 800:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 801:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 802:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 803:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 804:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 805:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 806:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 807:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** }
 808:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 809:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 810:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 811:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 812:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 813:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 814:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 815:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 816:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 817:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 818:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 819:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 820:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 821:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 822:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 823:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 824:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 825:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 826:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 827:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 828:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 829:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** }
 830:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 831:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 832:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 833:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 834:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 835:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 836:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 837:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 838:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 839:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 840:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 841:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 842:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 843:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 844:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 845:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 846:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 847:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 848:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** }
 849:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 850:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 851:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 852:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 853:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 854:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 855:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 856:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 857:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 858:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 859:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 860:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 861:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 862:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 863:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 864:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 865:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 866:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 867:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** }
 868:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 869:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 870:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 871:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 872:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 873:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 875:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 876:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 877:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 878:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 879:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 880:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 881:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 882:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 883:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 884:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** }
 885:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 886:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 887:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 888:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 889:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 890:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 891:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 892:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 893:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 894:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 895:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 896:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 897:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 898:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 899:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 900:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** }
 901:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 902:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 903:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 904:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 905:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 906:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 907:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 908:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 909:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 910:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 911:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 912:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 913:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 914:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 915:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 916:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 917:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 918:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 919:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** }
 920:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 921:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 922:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 923:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 924:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 925:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 926:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 927:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 928:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 929:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 930:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 931:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 932:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 933:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 934:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 935:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 936:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 937:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** }
 938:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 939:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 940:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 941:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 942:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 943:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 944:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 945:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 946:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 947:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 948:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 949:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 950:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 951:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 952:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 953:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 954:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 955:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 956:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** }
 957:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 958:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 959:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 960:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 961:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 962:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 963:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 964:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 965:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 966:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 967:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 968:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 969:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 970:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 971:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 972:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 973:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 974:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** }
 975:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 976:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 977:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 978:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 979:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 980:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 981:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 982:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 983:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 984:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 985:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
 986:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 987:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 988:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
 989:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 990:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 991:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 992:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
 993:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 994:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 995:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** }
 996:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
 997:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
 998:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 999:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1000:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1001:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1002:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1003:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1004:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
1005:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1006:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1007:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
1008:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1009:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1010:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
1011:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1012:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
1013:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
1014:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
  25              	 .loc 1 1014 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 081C     	 mov r0,r1
  40 000a 111C     	 mov r1,r2
  41 000c FB1C     	 add r3,r7,#3
  42 000e 021C     	 add r2,r0,#0
  43 0010 1A70     	 strb r2,[r3]
  44 0012 BB1C     	 add r3,r7,#2
  45 0014 0A1C     	 add r2,r1,#0
  46 0016 1A70     	 strb r2,[r3]
1015:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
  47              	 .loc 1 1015 0
  48 0018 FB1C     	 add r3,r7,#3
  49 001a 1878     	 ldrb r0,[r3]
  50 001c FB1C     	 add r3,r7,#3
  51 001e 1B78     	 ldrb r3,[r3]
  52 0020 7A68     	 ldr r2,[r7,#4]
  53 0022 0633     	 add r3,r3,#6
  54 0024 9B00     	 lsl r3,r3,#2
  55 0026 D318     	 add r3,r2,r3
  56 0028 5B68     	 ldr r3,[r3,#4]
  57 002a 074A     	 ldr r2,.L2
  58 002c 1A40     	 and r2,r3
1016:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
  59              	 .loc 1 1016 0
  60 002e BB1C     	 add r3,r7,#2
  61 0030 1B78     	 ldrb r3,[r3]
  62 0032 9B02     	 lsl r3,r3,#10
1015:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
  63              	 .loc 1 1015 0
  64 0034 1A43     	 orr r2,r3
  65 0036 7968     	 ldr r1,[r7,#4]
  66 0038 831D     	 add r3,r0,#6
  67 003a 9B00     	 lsl r3,r3,#2
  68 003c CB18     	 add r3,r1,r3
  69 003e 5A60     	 str r2,[r3,#4]
1017:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** }
  70              	 .loc 1 1017 0
  71 0040 BD46     	 mov sp,r7
  72 0042 02B0     	 add sp,sp,#8
  73              	 
  74 0044 80BD     	 pop {r7,pc}
  75              	.L3:
  76 0046 C046     	 .align 2
  77              	.L2:
  78 0048 FFF3FFFF 	 .word -3073
  79              	 .cfi_endproc
  80              	.LFE61:
  82              	 .section .text.XMC_USIC_CH_SetBRGInputClockSource,"ax",%progbits
  83              	 .align 2
  84              	 .code 16
  85              	 .thumb_func
  87              	XMC_USIC_CH_SetBRGInputClockSource:
  88              	.LFB62:
1018:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** 
1019:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** /**
1020:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1021:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1022:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1023:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1024:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
1025:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1026:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1027:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  *
1028:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1029:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1030:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****  */
1031:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1032:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** {
  89              	 .loc 1 1032 0
  90              	 .cfi_startproc
  91 0000 80B5     	 push {r7,lr}
  92              	.LCFI3:
  93              	 .cfi_def_cfa_offset 8
  94              	 .cfi_offset 7,-8
  95              	 .cfi_offset 14,-4
  96 0002 82B0     	 sub sp,sp,#8
  97              	.LCFI4:
  98              	 .cfi_def_cfa_offset 16
  99 0004 00AF     	 add r7,sp,#0
 100              	.LCFI5:
 101              	 .cfi_def_cfa_register 7
 102 0006 7860     	 str r0,[r7,#4]
 103 0008 0A1C     	 mov r2,r1
 104 000a FB1C     	 add r3,r7,#3
 105 000c 1A70     	 strb r2,[r3]
1033:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
 106              	 .loc 1 1033 0
 107 000e 7B68     	 ldr r3,[r7,#4]
 108 0010 5B69     	 ldr r3,[r3,#20]
 109 0012 0322     	 mov r2,#3
 110 0014 9343     	 bic r3,r2
 111 0016 1A1C     	 mov r2,r3
 112 0018 FB1C     	 add r3,r7,#3
 113 001a 1B78     	 ldrb r3,[r3]
 114 001c 1A43     	 orr r2,r3
 115 001e 7B68     	 ldr r3,[r7,#4]
 116 0020 5A61     	 str r2,[r3,#20]
1034:C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc\xmc_usic.h **** }
 117              	 .loc 1 1034 0
 118 0022 BD46     	 mov sp,r7
 119 0024 02B0     	 add sp,sp,#8
 120              	 
 121 0026 80BD     	 pop {r7,pc}
 122              	 .cfi_endproc
 123              	.LFE62:
 125              	 .section .text.XMC_USIC_CH_Enable,"ax",%progbits
 126              	 .align 2
 127              	 .global XMC_USIC_CH_Enable
 128              	 .code 16
 129              	 .thumb_func
 131              	XMC_USIC_CH_Enable:
 132              	.LFB126:
 133              	 .file 2 "../Libraries/XMCLib/src/xmc_usic.c"
   1:../Libraries/XMCLib/src/xmc_usic.c **** /**
   2:../Libraries/XMCLib/src/xmc_usic.c ****  * @file xmc_usic.c
   3:../Libraries/XMCLib/src/xmc_usic.c ****  * @date 2019-07-01
   4:../Libraries/XMCLib/src/xmc_usic.c ****  *
   5:../Libraries/XMCLib/src/xmc_usic.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usic.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_usic.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_usic.c ****  *
   9:../Libraries/XMCLib/src/xmc_usic.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usic.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_usic.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_usic.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_usic.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  18:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_usic.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  21:../Libraries/XMCLib/src/xmc_usic.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_usic.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_usic.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_usic.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_usic.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_usic.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_usic.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_usic.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_usic.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_usic.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_usic.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_usic.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_usic.c ****  *
  36:../Libraries/XMCLib/src/xmc_usic.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_usic.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_usic.c ****  *
  39:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Documentation improved <br>
  42:../Libraries/XMCLib/src/xmc_usic.c ****  *
  43:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-05-08:
  44:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Clearing bit fields PDIV, PCTQ, PPPEN in XMC_USIC_CH_SetBaudrate() API <br>
  45:../Libraries/XMCLib/src/xmc_usic.c ****  *      
  46:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-06-20:
  47:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:../Libraries/XMCLib/src/xmc_usic.c ****  *
  49:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-27:
  50:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  51:../Libraries/XMCLib/src/xmc_usic.c ****  *
  52:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-28:
  53:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added asserts to XMC_USIC_CH_ConfigExternalInputSignalToBRG() <br>
  54:../Libraries/XMCLib/src/xmc_usic.c ****  *
  55:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-09-01:
  56:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Fixed warning in the asserts <br>
  57:../Libraries/XMCLib/src/xmc_usic.c ****  *
  58:../Libraries/XMCLib/src/xmc_usic.c ****  * 2018-09-29:
  59:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  60:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  61:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-03-30:
  62:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Changed XMC_USIC_Enable() adding polling to check clock ungate
  63:../Libraries/XMCLib/src/xmc_usic.c ****  *
  64:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-05-07:
  65:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  66:../Libraries/XMCLib/src/xmc_usic.c ****  *
  67:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-07-01:
  68:../Libraries/XMCLib/src/xmc_usic.c ****  *     - XMC_USIC_CH_SetBaudrateEx() change type of input parameters
  69:../Libraries/XMCLib/src/xmc_usic.c ****  *
  70:../Libraries/XMCLib/src/xmc_usic.c ****  * @endcond
  71:../Libraries/XMCLib/src/xmc_usic.c ****  *
  72:../Libraries/XMCLib/src/xmc_usic.c ****  */
  73:../Libraries/XMCLib/src/xmc_usic.c **** 
  74:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  75:../Libraries/XMCLib/src/xmc_usic.c ****  * HEADER FILES
  76:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  77:../Libraries/XMCLib/src/xmc_usic.c **** 
  78:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_usic.h"
  79:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_scu.h"
  80:../Libraries/XMCLib/src/xmc_usic.c **** 
  81:../Libraries/XMCLib/src/xmc_usic.c **** #include <stdlib.h>     /* abs */
  82:../Libraries/XMCLib/src/xmc_usic.c **** 
  83:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  84:../Libraries/XMCLib/src/xmc_usic.c ****  * MACROS
  85:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  86:../Libraries/XMCLib/src/xmc_usic.c **** 
  87:../Libraries/XMCLib/src/xmc_usic.c **** #define USIC_CH_INPR_Msk       (0x7UL)
  88:../Libraries/XMCLib/src/xmc_usic.c **** 
  89:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  90:../Libraries/XMCLib/src/xmc_usic.c ****  * API IMPLEMENTATION
  91:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  92:../Libraries/XMCLib/src/xmc_usic.c **** 
  93:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel)
  94:../Libraries/XMCLib/src/xmc_usic.c **** {
 134              	 .loc 2 94 0
 135              	 .cfi_startproc
 136 0000 80B5     	 push {r7,lr}
 137              	.LCFI6:
 138              	 .cfi_def_cfa_offset 8
 139              	 .cfi_offset 7,-8
 140              	 .cfi_offset 14,-4
 141 0002 82B0     	 sub sp,sp,#8
 142              	.LCFI7:
 143              	 .cfi_def_cfa_offset 16
 144 0004 00AF     	 add r7,sp,#0
 145              	.LCFI8:
 146              	 .cfi_def_cfa_register 7
 147 0006 7860     	 str r0,[r7,#4]
  95:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_Enable: channel not valid", XMC_USIC_IsChannelValid(channel));
  96:../Libraries/XMCLib/src/xmc_usic.c **** 
  97:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1))
 148              	 .loc 2 97 0
 149 0008 7A68     	 ldr r2,[r7,#4]
 150 000a 9023     	 mov r3,#144
 151 000c DB05     	 lsl r3,r3,#23
 152 000e 9A42     	 cmp r2,r3
 153 0010 03D0     	 beq .L6
 154              	 .loc 2 97 0 is_stmt 0 discriminator 1
 155 0012 7B68     	 ldr r3,[r7,#4]
 156 0014 0C4A     	 ldr r2,.L9
 157 0016 9342     	 cmp r3,r2
 158 0018 03D1     	 bne .L7
 159              	.L6:
  98:../Libraries/XMCLib/src/xmc_usic.c ****   {
  99:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC0);
 160              	 .loc 2 99 0 is_stmt 1
 161 001a 0C4B     	 ldr r3,.L9+4
 162 001c 181C     	 mov r0,r3
 163 001e FFF7FEFF 	 bl XMC_USIC_Enable
 164              	.L7:
 100:../Libraries/XMCLib/src/xmc_usic.c ****   }
 101:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)
 102:../Libraries/XMCLib/src/xmc_usic.c ****   else if((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1))
 103:../Libraries/XMCLib/src/xmc_usic.c ****   {
 104:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC1);
 105:../Libraries/XMCLib/src/xmc_usic.c ****   }
 106:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 107:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)
 108:../Libraries/XMCLib/src/xmc_usic.c ****   else if((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1))
 109:../Libraries/XMCLib/src/xmc_usic.c ****   {
 110:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC2);
 111:../Libraries/XMCLib/src/xmc_usic.c ****   }
 112:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 113:../Libraries/XMCLib/src/xmc_usic.c ****   else
 114:../Libraries/XMCLib/src/xmc_usic.c ****   {
 115:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0U/*Always*/);
 116:../Libraries/XMCLib/src/xmc_usic.c ****   }
 117:../Libraries/XMCLib/src/xmc_usic.c **** 
 118:../Libraries/XMCLib/src/xmc_usic.c ****   /* USIC channel switched on*/
 119:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (USIC_CH_KSCFG_MODEN_Msk | USIC_CH_KSCFG_BPMODEN_Msk);
 165              	 .loc 2 119 0
 166 0022 7B68     	 ldr r3,[r7,#4]
 167 0024 0322     	 mov r2,#3
 168 0026 DA60     	 str r2,[r3,#12]
 120:../Libraries/XMCLib/src/xmc_usic.c ****   while ((channel->KSCFG & USIC_CH_KSCFG_MODEN_Msk) == 0U)
 169              	 .loc 2 120 0
 170 0028 C046     	 mov r8,r8
 171              	.L8:
 172              	 .loc 2 120 0 is_stmt 0 discriminator 1
 173 002a 7B68     	 ldr r3,[r7,#4]
 174 002c DB68     	 ldr r3,[r3,#12]
 175 002e 0122     	 mov r2,#1
 176 0030 1340     	 and r3,r2
 177 0032 FAD0     	 beq .L8
 121:../Libraries/XMCLib/src/xmc_usic.c ****   {
 122:../Libraries/XMCLib/src/xmc_usic.c ****     /* Wait till the channel is enabled */
 123:../Libraries/XMCLib/src/xmc_usic.c ****   }
 124:../Libraries/XMCLib/src/xmc_usic.c **** 
 125:../Libraries/XMCLib/src/xmc_usic.c ****   /* Set USIC channel in IDLE mode */
 126:../Libraries/XMCLib/src/xmc_usic.c ****   channel->CCR &= (uint32_t)~USIC_CH_CCR_MODE_Msk;
 178              	 .loc 2 126 0 is_stmt 1
 179 0034 7B68     	 ldr r3,[r7,#4]
 180 0036 1B6C     	 ldr r3,[r3,#64]
 181 0038 0F22     	 mov r2,#15
 182 003a 9343     	 bic r3,r2
 183 003c 1A1C     	 mov r2,r3
 184 003e 7B68     	 ldr r3,[r7,#4]
 185 0040 1A64     	 str r2,[r3,#64]
 127:../Libraries/XMCLib/src/xmc_usic.c **** }
 186              	 .loc 2 127 0
 187 0042 BD46     	 mov sp,r7
 188 0044 02B0     	 add sp,sp,#8
 189              	 
 190 0046 80BD     	 pop {r7,pc}
 191              	.L10:
 192              	 .align 2
 193              	.L9:
 194 0048 00020048 	 .word 1207960064
 195 004c 08000048 	 .word 1207959560
 196              	 .cfi_endproc
 197              	.LFE126:
 199              	 .section .text.XMC_USIC_CH_Disable,"ax",%progbits
 200              	 .align 2
 201              	 .global XMC_USIC_CH_Disable
 202              	 .code 16
 203              	 .thumb_func
 205              	XMC_USIC_CH_Disable:
 206              	.LFB127:
 128:../Libraries/XMCLib/src/xmc_usic.c **** 
 129:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel)
 130:../Libraries/XMCLib/src/xmc_usic.c **** {
 207              	 .loc 2 130 0
 208              	 .cfi_startproc
 209 0000 80B5     	 push {r7,lr}
 210              	.LCFI9:
 211              	 .cfi_def_cfa_offset 8
 212              	 .cfi_offset 7,-8
 213              	 .cfi_offset 14,-4
 214 0002 82B0     	 sub sp,sp,#8
 215              	.LCFI10:
 216              	 .cfi_def_cfa_offset 16
 217 0004 00AF     	 add r7,sp,#0
 218              	.LCFI11:
 219              	 .cfi_def_cfa_register 7
 220 0006 7860     	 str r0,[r7,#4]
 131:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (uint32_t)((channel->KSCFG & (~USIC_CH_KSCFG_MODEN_Msk)) | USIC_CH_KSCFG_BPMODEN
 221              	 .loc 2 131 0
 222 0008 7B68     	 ldr r3,[r7,#4]
 223 000a DB68     	 ldr r3,[r3,#12]
 224 000c 0322     	 mov r2,#3
 225 000e 9343     	 bic r3,r2
 226 0010 0222     	 mov r2,#2
 227 0012 1A43     	 orr r2,r3
 228 0014 7B68     	 ldr r3,[r7,#4]
 229 0016 DA60     	 str r2,[r3,#12]
 132:../Libraries/XMCLib/src/xmc_usic.c **** }
 230              	 .loc 2 132 0
 231 0018 BD46     	 mov sp,r7
 232 001a 02B0     	 add sp,sp,#8
 233              	 
 234 001c 80BD     	 pop {r7,pc}
 235              	 .cfi_endproc
 236              	.LFE127:
 238              	 .global __aeabi_uidiv
 239 001e C046     	 .section .text.XMC_USIC_CH_SetBaudrate,"ax",%progbits
 240              	 .align 2
 241              	 .global XMC_USIC_CH_SetBaudrate
 242              	 .code 16
 243              	 .thumb_func
 245              	XMC_USIC_CH_SetBaudrate:
 246              	.LFB128:
 133:../Libraries/XMCLib/src/xmc_usic.c **** 
 134:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 135:../Libraries/XMCLib/src/xmc_usic.c **** {
 247              	 .loc 2 135 0
 248              	 .cfi_startproc
 249 0000 80B5     	 push {r7,lr}
 250              	.LCFI12:
 251              	 .cfi_def_cfa_offset 8
 252              	 .cfi_offset 7,-8
 253              	 .cfi_offset 14,-4
 254 0002 8EB0     	 sub sp,sp,#56
 255              	.LCFI13:
 256              	 .cfi_def_cfa_offset 64
 257 0004 00AF     	 add r7,sp,#0
 258              	.LCFI14:
 259              	 .cfi_def_cfa_register 7
 260 0006 F860     	 str r0,[r7,#12]
 261 0008 B960     	 str r1,[r7,#8]
 262 000a 7A60     	 str r2,[r7,#4]
 136:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 137:../Libraries/XMCLib/src/xmc_usic.c ****   
 138:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t peripheral_clock;
 139:../Libraries/XMCLib/src/xmc_usic.c ****   
 140:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider;
 141:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider_min;
 142:../Libraries/XMCLib/src/xmc_usic.c **** 
 143:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv;
 144:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int;
 145:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int_min;
 146:../Libraries/XMCLib/src/xmc_usic.c ****   
 147:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac;
 148:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac_min;
 149:../Libraries/XMCLib/src/xmc_usic.c **** 
 150:../Libraries/XMCLib/src/xmc_usic.c ****   /* The rate and peripheral clock are divided by 100 to be able to use only 32bit arithmetic */
 151:../Libraries/XMCLib/src/xmc_usic.c ****   if ((rate >= 100U) && (oversampling != 0U))
 263              	 .loc 2 151 0
 264 000c BB68     	 ldr r3,[r7,#8]
 265 000e 632B     	 cmp r3,#99
 266 0010 5CD9     	 bls .L13
 267              	 .loc 2 151 0 is_stmt 0 discriminator 1
 268 0012 7B68     	 ldr r3,[r7,#4]
 269 0014 002B     	 cmp r3,#0
 270 0016 59D0     	 beq .L13
 152:../Libraries/XMCLib/src/xmc_usic.c ****   {
 153:../Libraries/XMCLib/src/xmc_usic.c ****     peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency() / 100U;
 271              	 .loc 2 153 0 is_stmt 1
 272 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 273 001c 031C     	 mov r3,r0
 274 001e 181C     	 mov r0,r3
 275 0020 6421     	 mov r1,#100
 276 0022 FFF7FEFF 	 bl __aeabi_uidiv
 277 0026 031C     	 mov r3,r0
 278 0028 3B62     	 str r3,[r7,#32]
 154:../Libraries/XMCLib/src/xmc_usic.c ****     rate = rate / 100U;
 279              	 .loc 2 154 0
 280 002a BB68     	 ldr r3,[r7,#8]
 281 002c 181C     	 mov r0,r3
 282 002e 6421     	 mov r1,#100
 283 0030 FFF7FEFF 	 bl __aeabi_uidiv
 284 0034 031C     	 mov r3,r0
 285 0036 BB60     	 str r3,[r7,#8]
 155:../Libraries/XMCLib/src/xmc_usic.c **** 
 156:../Libraries/XMCLib/src/xmc_usic.c ****     clock_divider_min = 1U;
 286              	 .loc 2 156 0
 287 0038 0123     	 mov r3,#1
 288 003a FB62     	 str r3,[r7,#44]
 157:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_int_min = 1U;
 289              	 .loc 2 157 0
 290 003c 0123     	 mov r3,#1
 291 003e BB62     	 str r3,[r7,#40]
 158:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_frac_min = 0x3ffU;
 292              	 .loc 2 158 0
 293 0040 284B     	 ldr r3,.L19
 294 0042 7B62     	 str r3,[r7,#36]
 159:../Libraries/XMCLib/src/xmc_usic.c **** 
 160:../Libraries/XMCLib/src/xmc_usic.c ****     for(clock_divider = 1023U; clock_divider > 0U; --clock_divider)
 295              	 .loc 2 160 0
 296 0044 274B     	 ldr r3,.L19
 297 0046 3B63     	 str r3,[r7,#48]
 298 0048 24E0     	 b .L14
 299              	.L16:
 161:../Libraries/XMCLib/src/xmc_usic.c ****     {
 162:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv = ((peripheral_clock * clock_divider) / (rate * oversampling));
 300              	 .loc 2 162 0
 301 004a 3B6A     	 ldr r3,[r7,#32]
 302 004c 3A6B     	 ldr r2,[r7,#48]
 303 004e 5A43     	 mul r2,r3
 304 0050 111C     	 mov r1,r2
 305 0052 BB68     	 ldr r3,[r7,#8]
 306 0054 7A68     	 ldr r2,[r7,#4]
 307 0056 5343     	 mul r3,r2
 308 0058 081C     	 mov r0,r1
 309 005a 191C     	 mov r1,r3
 310 005c FFF7FEFF 	 bl __aeabi_uidiv
 311 0060 031C     	 mov r3,r0
 312 0062 FB61     	 str r3,[r7,#28]
 163:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_int = pdiv >> 10U;
 313              	 .loc 2 163 0
 314 0064 FB69     	 ldr r3,[r7,#28]
 315 0066 9B0A     	 lsr r3,r3,#10
 316 0068 BB61     	 str r3,[r7,#24]
 164:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_frac = pdiv & 0x3ffU;
 317              	 .loc 2 164 0
 318 006a FB69     	 ldr r3,[r7,#28]
 319 006c 9B05     	 lsl r3,r3,#22
 320 006e 9B0D     	 lsr r3,r3,#22
 321 0070 7B61     	 str r3,[r7,#20]
 165:../Libraries/XMCLib/src/xmc_usic.c **** 
 166:../Libraries/XMCLib/src/xmc_usic.c ****       if ((pdiv_int < 1024U) && (pdiv_frac < pdiv_frac_min))
 322              	 .loc 2 166 0
 323 0072 BB69     	 ldr r3,[r7,#24]
 324 0074 1B4A     	 ldr r2,.L19
 325 0076 9342     	 cmp r3,r2
 326 0078 09D8     	 bhi .L15
 327              	 .loc 2 166 0 is_stmt 0 discriminator 1
 328 007a 7A69     	 ldr r2,[r7,#20]
 329 007c 7B6A     	 ldr r3,[r7,#36]
 330 007e 9A42     	 cmp r2,r3
 331 0080 05D2     	 bcs .L15
 167:../Libraries/XMCLib/src/xmc_usic.c ****       {
 168:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_frac_min = pdiv_frac;
 332              	 .loc 2 168 0 is_stmt 1
 333 0082 7B69     	 ldr r3,[r7,#20]
 334 0084 7B62     	 str r3,[r7,#36]
 169:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_int_min = pdiv_int;
 335              	 .loc 2 169 0
 336 0086 BB69     	 ldr r3,[r7,#24]
 337 0088 BB62     	 str r3,[r7,#40]
 170:../Libraries/XMCLib/src/xmc_usic.c ****         clock_divider_min = clock_divider;
 338              	 .loc 2 170 0
 339 008a 3B6B     	 ldr r3,[r7,#48]
 340 008c FB62     	 str r3,[r7,#44]
 341              	.L15:
 160:../Libraries/XMCLib/src/xmc_usic.c ****     {
 342              	 .loc 2 160 0 discriminator 2
 343 008e 3B6B     	 ldr r3,[r7,#48]
 344 0090 013B     	 sub r3,r3,#1
 345 0092 3B63     	 str r3,[r7,#48]
 346              	.L14:
 160:../Libraries/XMCLib/src/xmc_usic.c ****     {
 347              	 .loc 2 160 0 is_stmt 0 discriminator 1
 348 0094 3B6B     	 ldr r3,[r7,#48]
 349 0096 002B     	 cmp r3,#0
 350 0098 D7D1     	 bne .L16
 171:../Libraries/XMCLib/src/xmc_usic.c ****       }
 172:../Libraries/XMCLib/src/xmc_usic.c ****     }
 173:../Libraries/XMCLib/src/xmc_usic.c **** 
 174:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL |
 351              	 .loc 2 174 0 is_stmt 1
 352 009a FB6A     	 ldr r3,[r7,#44]
 353 009c 8022     	 mov r2,#128
 354 009e 1202     	 lsl r2,r2,#8
 355 00a0 1A43     	 orr r2,r3
 356 00a2 FB68     	 ldr r3,[r7,#12]
 357 00a4 1A61     	 str r2,[r3,#16]
 175:../Libraries/XMCLib/src/xmc_usic.c ****                    (clock_divider_min << USIC_CH_FDR_STEP_Pos);
 176:../Libraries/XMCLib/src/xmc_usic.c **** 
 177:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 358              	 .loc 2 177 0
 359 00a6 FB68     	 ldr r3,[r7,#12]
 360 00a8 5B69     	 ldr r3,[r3,#20]
 361 00aa 0F4A     	 ldr r2,.L19+4
 362 00ac 1A40     	 and r2,r3
 178:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 179:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 180:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 181:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 363              	 .loc 2 181 0
 364 00ae 7B68     	 ldr r3,[r7,#4]
 365 00b0 013B     	 sub r3,r3,#1
 366 00b2 9B02     	 lsl r3,r3,#10
 180:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 367              	 .loc 2 180 0
 368 00b4 1A43     	 orr r2,r3
 182:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 369              	 .loc 2 182 0
 370 00b6 BB6A     	 ldr r3,[r7,#40]
 371 00b8 013B     	 sub r3,r3,#1
 372 00ba 1B04     	 lsl r3,r3,#16
 181:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 373              	 .loc 2 181 0
 374 00bc 1A43     	 orr r2,r3
 177:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 375              	 .loc 2 177 0
 376 00be FB68     	 ldr r3,[r7,#12]
 377 00c0 5A61     	 str r2,[r3,#20]
 183:../Libraries/XMCLib/src/xmc_usic.c ****                     
 184:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 378              	 .loc 2 184 0
 379 00c2 3723     	 mov r3,#55
 380 00c4 FB18     	 add r3,r7,r3
 381 00c6 0022     	 mov r2,#0
 382 00c8 1A70     	 strb r2,[r3]
 383 00ca 03E0     	 b .L17
 384              	.L13:
 185:../Libraries/XMCLib/src/xmc_usic.c ****   }
 186:../Libraries/XMCLib/src/xmc_usic.c ****   else 
 187:../Libraries/XMCLib/src/xmc_usic.c ****   {
 188:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 385              	 .loc 2 188 0
 386 00cc 3723     	 mov r3,#55
 387 00ce FB18     	 add r3,r7,r3
 388 00d0 0122     	 mov r2,#1
 389 00d2 1A70     	 strb r2,[r3]
 390              	.L17:
 189:../Libraries/XMCLib/src/xmc_usic.c ****   }
 190:../Libraries/XMCLib/src/xmc_usic.c ****   
 191:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 391              	 .loc 2 191 0
 392 00d4 3723     	 mov r3,#55
 393 00d6 FB18     	 add r3,r7,r3
 394 00d8 1B78     	 ldrb r3,[r3]
 192:../Libraries/XMCLib/src/xmc_usic.c **** }
 395              	 .loc 2 192 0
 396 00da 181C     	 mov r0,r3
 397 00dc BD46     	 mov sp,r7
 398 00de 0EB0     	 add sp,sp,#56
 399              	 
 400 00e0 80BD     	 pop {r7,pc}
 401              	.L20:
 402 00e2 C046     	 .align 2
 403              	.L19:
 404 00e4 FF030000 	 .word 1023
 405 00e8 EF8000FC 	 .word -67075857
 406              	 .cfi_endproc
 407              	.LFE128:
 409              	 .global __aeabi_idiv
 410              	 .section .text.XMC_USIC_CH_SetBaudrateEx,"ax",%progbits
 411              	 .align 2
 412              	 .global XMC_USIC_CH_SetBaudrateEx
 413              	 .code 16
 414              	 .thumb_func
 416              	XMC_USIC_CH_SetBaudrateEx:
 417              	.LFB129:
 193:../Libraries/XMCLib/src/xmc_usic.c **** 
 194:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 195:../Libraries/XMCLib/src/xmc_usic.c **** {
 418              	 .loc 2 195 0
 419              	 .cfi_startproc
 420 0000 80B5     	 push {r7,lr}
 421              	.LCFI15:
 422              	 .cfi_def_cfa_offset 8
 423              	 .cfi_offset 7,-8
 424              	 .cfi_offset 14,-4
 425 0002 8CB0     	 sub sp,sp,#48
 426              	.LCFI16:
 427              	 .cfi_def_cfa_offset 56
 428 0004 00AF     	 add r7,sp,#0
 429              	.LCFI17:
 430              	 .cfi_def_cfa_register 7
 431 0006 F860     	 str r0,[r7,#12]
 432 0008 B960     	 str r1,[r7,#8]
 433 000a 7A60     	 str r2,[r7,#4]
 196:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 434              	 .loc 2 196 0
 435 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 436 0010 031C     	 mov r3,r0
 437 0012 3B62     	 str r3,[r7,#32]
 197:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t brg_clock = rate * oversampling;
 438              	 .loc 2 197 0
 439 0014 BB68     	 ldr r3,[r7,#8]
 440 0016 7A68     	 ldr r2,[r7,#4]
 441 0018 5343     	 mul r3,r2
 442 001a FB61     	 str r3,[r7,#28]
 198:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t actual_rate_upper;
 199:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t actual_rate_lower;
 200:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv = 1;
 443              	 .loc 2 200 0
 444 001c 0123     	 mov r3,#1
 445 001e FB62     	 str r3,[r7,#44]
 201:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider_step;
 202:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 203:../Libraries/XMCLib/src/xmc_usic.c **** 
 204:../Libraries/XMCLib/src/xmc_usic.c ****   if (peripheral_clock > brg_clock)
 446              	 .loc 2 204 0
 447 0020 3A6A     	 ldr r2,[r7,#32]
 448 0022 FB69     	 ldr r3,[r7,#28]
 449 0024 9A42     	 cmp r2,r3
 450 0026 62DD     	 ble .L22
 205:../Libraries/XMCLib/src/xmc_usic.c ****   {
 206:../Libraries/XMCLib/src/xmc_usic.c ****     divider_step = peripheral_clock / brg_clock; // integer division gets truncated
 451              	 .loc 2 206 0
 452 0028 386A     	 ldr r0,[r7,#32]
 453 002a F969     	 ldr r1,[r7,#28]
 454 002c FFF7FEFF 	 bl __aeabi_idiv
 455 0030 031C     	 mov r3,r0
 456 0032 BB62     	 str r3,[r7,#40]
 207:../Libraries/XMCLib/src/xmc_usic.c ****     while (divider_step >= 1023)
 457              	 .loc 2 207 0
 458 0034 0FE0     	 b .L23
 459              	.L24:
 208:../Libraries/XMCLib/src/xmc_usic.c ****     {
 209:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv++;
 460              	 .loc 2 209 0
 461 0036 FB6A     	 ldr r3,[r7,#44]
 462 0038 0133     	 add r3,r3,#1
 463 003a FB62     	 str r3,[r7,#44]
 210:../Libraries/XMCLib/src/xmc_usic.c ****       brg_clock = rate * oversampling * pdiv;
 464              	 .loc 2 210 0
 465 003c BB68     	 ldr r3,[r7,#8]
 466 003e 7A68     	 ldr r2,[r7,#4]
 467 0040 5343     	 mul r3,r2
 468 0042 1A1C     	 mov r2,r3
 469 0044 FB6A     	 ldr r3,[r7,#44]
 470 0046 5343     	 mul r3,r2
 471 0048 FB61     	 str r3,[r7,#28]
 211:../Libraries/XMCLib/src/xmc_usic.c ****       divider_step = peripheral_clock / brg_clock; // integer division gets truncated
 472              	 .loc 2 211 0
 473 004a 386A     	 ldr r0,[r7,#32]
 474 004c F969     	 ldr r1,[r7,#28]
 475 004e FFF7FEFF 	 bl __aeabi_idiv
 476 0052 031C     	 mov r3,r0
 477 0054 BB62     	 str r3,[r7,#40]
 478              	.L23:
 207:../Libraries/XMCLib/src/xmc_usic.c ****     {
 479              	 .loc 2 207 0
 480 0056 BB6A     	 ldr r3,[r7,#40]
 481 0058 2A4A     	 ldr r2,.L28
 482 005a 9342     	 cmp r3,r2
 483 005c EBD8     	 bhi .L24
 212:../Libraries/XMCLib/src/xmc_usic.c ****     }
 213:../Libraries/XMCLib/src/xmc_usic.c ****     actual_rate_upper = peripheral_clock / (divider_step * oversampling * pdiv);
 484              	 .loc 2 213 0
 485 005e 396A     	 ldr r1,[r7,#32]
 486 0060 7B68     	 ldr r3,[r7,#4]
 487 0062 BA6A     	 ldr r2,[r7,#40]
 488 0064 5343     	 mul r3,r2
 489 0066 FA6A     	 ldr r2,[r7,#44]
 490 0068 5343     	 mul r3,r2
 491 006a 081C     	 mov r0,r1
 492 006c 191C     	 mov r1,r3
 493 006e FFF7FEFF 	 bl __aeabi_uidiv
 494 0072 031C     	 mov r3,r0
 495 0074 BB61     	 str r3,[r7,#24]
 214:../Libraries/XMCLib/src/xmc_usic.c ****     actual_rate_lower = peripheral_clock / ((divider_step + 1) * oversampling * pdiv);
 496              	 .loc 2 214 0
 497 0076 396A     	 ldr r1,[r7,#32]
 498 0078 BB6A     	 ldr r3,[r7,#40]
 499 007a 0133     	 add r3,r3,#1
 500 007c 7A68     	 ldr r2,[r7,#4]
 501 007e 5343     	 mul r3,r2
 502 0080 FA6A     	 ldr r2,[r7,#44]
 503 0082 5343     	 mul r3,r2
 504 0084 081C     	 mov r0,r1
 505 0086 191C     	 mov r1,r3
 506 0088 FFF7FEFF 	 bl __aeabi_uidiv
 507 008c 031C     	 mov r3,r0
 508 008e 7B61     	 str r3,[r7,#20]
 215:../Libraries/XMCLib/src/xmc_usic.c **** 
 216:../Libraries/XMCLib/src/xmc_usic.c ****     // choose better approximation if the peripheral frequency is not a multiple of the baudrate
 217:../Libraries/XMCLib/src/xmc_usic.c ****     if (abs(rate - actual_rate_lower) < abs(rate - actual_rate_upper))
 509              	 .loc 2 217 0
 510 0090 BA68     	 ldr r2,[r7,#8]
 511 0092 7B69     	 ldr r3,[r7,#20]
 512 0094 D31A     	 sub r3,r2,r3
 513 0096 D917     	 asr r1,r3,#31
 514 0098 5A18     	 add r2,r3,r1
 515 009a 4A40     	 eor r2,r1
 516 009c B968     	 ldr r1,[r7,#8]
 517 009e BB69     	 ldr r3,[r7,#24]
 518 00a0 CB1A     	 sub r3,r1,r3
 519 00a2 D917     	 asr r1,r3,#31
 520 00a4 5B18     	 add r3,r3,r1
 521 00a6 4B40     	 eor r3,r1
 522 00a8 9A42     	 cmp r2,r3
 523 00aa 02DA     	 bge .L25
 218:../Libraries/XMCLib/src/xmc_usic.c ****     {
 219:../Libraries/XMCLib/src/xmc_usic.c ****       divider_step += 1;
 524              	 .loc 2 219 0
 525 00ac BB6A     	 ldr r3,[r7,#40]
 526 00ae 0133     	 add r3,r3,#1
 527 00b0 BB62     	 str r3,[r7,#40]
 528              	.L25:
 220:../Libraries/XMCLib/src/xmc_usic.c ****     }
 221:../Libraries/XMCLib/src/xmc_usic.c **** 
 222:../Libraries/XMCLib/src/xmc_usic.c ****     divider_step = 1024 - divider_step;
 529              	 .loc 2 222 0
 530 00b2 BB6A     	 ldr r3,[r7,#40]
 531 00b4 8022     	 mov r2,#128
 532 00b6 D200     	 lsl r2,r2,#3
 533 00b8 D31A     	 sub r3,r2,r3
 534 00ba BB62     	 str r3,[r7,#40]
 223:../Libraries/XMCLib/src/xmc_usic.c **** 
 224:../Libraries/XMCLib/src/xmc_usic.c **** 
 225:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL |
 535              	 .loc 2 225 0
 536 00bc BB6A     	 ldr r3,[r7,#40]
 537 00be 8022     	 mov r2,#128
 538 00c0 D201     	 lsl r2,r2,#7
 539 00c2 1A43     	 orr r2,r3
 540 00c4 FB68     	 ldr r3,[r7,#12]
 541 00c6 1A61     	 str r2,[r3,#16]
 226:../Libraries/XMCLib/src/xmc_usic.c ****                    (divider_step << USIC_CH_FDR_STEP_Pos);
 227:../Libraries/XMCLib/src/xmc_usic.c **** 
 228:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 542              	 .loc 2 228 0
 543 00c8 FB68     	 ldr r3,[r7,#12]
 544 00ca 5B69     	 ldr r3,[r3,#20]
 545 00cc 0E4A     	 ldr r2,.L28+4
 546 00ce 1A40     	 and r2,r3
 229:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 230:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 231:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 232:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 547              	 .loc 2 232 0
 548 00d0 7B68     	 ldr r3,[r7,#4]
 549 00d2 013B     	 sub r3,r3,#1
 550 00d4 9B02     	 lsl r3,r3,#10
 231:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 551              	 .loc 2 231 0
 552 00d6 1A43     	 orr r2,r3
 233:../Libraries/XMCLib/src/xmc_usic.c **** 				   ((pdiv -1) << USIC_CH_BRG_PDIV_Pos);
 553              	 .loc 2 233 0
 554 00d8 FB6A     	 ldr r3,[r7,#44]
 555 00da 013B     	 sub r3,r3,#1
 556 00dc 1B04     	 lsl r3,r3,#16
 232:../Libraries/XMCLib/src/xmc_usic.c **** 				   ((pdiv -1) << USIC_CH_BRG_PDIV_Pos);
 557              	 .loc 2 232 0
 558 00de 1A43     	 orr r2,r3
 228:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 559              	 .loc 2 228 0
 560 00e0 FB68     	 ldr r3,[r7,#12]
 561 00e2 5A61     	 str r2,[r3,#20]
 234:../Libraries/XMCLib/src/xmc_usic.c **** 
 235:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 562              	 .loc 2 235 0
 563 00e4 2723     	 mov r3,#39
 564 00e6 FB18     	 add r3,r7,r3
 565 00e8 0022     	 mov r2,#0
 566 00ea 1A70     	 strb r2,[r3]
 567 00ec 03E0     	 b .L26
 568              	.L22:
 236:../Libraries/XMCLib/src/xmc_usic.c ****   }
 237:../Libraries/XMCLib/src/xmc_usic.c ****   else
 238:../Libraries/XMCLib/src/xmc_usic.c ****   {
 239:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 569              	 .loc 2 239 0
 570 00ee 2723     	 mov r3,#39
 571 00f0 FB18     	 add r3,r7,r3
 572 00f2 0122     	 mov r2,#1
 573 00f4 1A70     	 strb r2,[r3]
 574              	.L26:
 240:../Libraries/XMCLib/src/xmc_usic.c ****   }
 241:../Libraries/XMCLib/src/xmc_usic.c **** 
 242:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 575              	 .loc 2 242 0
 576 00f6 2723     	 mov r3,#39
 577 00f8 FB18     	 add r3,r7,r3
 578 00fa 1B78     	 ldrb r3,[r3]
 243:../Libraries/XMCLib/src/xmc_usic.c **** }
 579              	 .loc 2 243 0
 580 00fc 181C     	 mov r0,r3
 581 00fe BD46     	 mov sp,r7
 582 0100 0CB0     	 add sp,sp,#48
 583              	 
 584 0102 80BD     	 pop {r7,pc}
 585              	.L29:
 586              	 .align 2
 587              	.L28:
 588 0104 FE030000 	 .word 1022
 589 0108 EF8000FC 	 .word -67075857
 590              	 .cfi_endproc
 591              	.LFE129:
 593              	 .global __aeabi_ui2f
 594              	 .global __aeabi_fdiv
 595              	 .global __aeabi_fmul
 596              	 .global __aeabi_f2uiz
 597              	 .section .text.XMC_USIC_CH_GetBaudrate,"ax",%progbits
 598              	 .align 2
 599              	 .global XMC_USIC_CH_GetBaudrate
 600              	 .code 16
 601              	 .thumb_func
 603              	XMC_USIC_CH_GetBaudrate:
 604              	.LFB130:
 244:../Libraries/XMCLib/src/xmc_usic.c **** 
 245:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel)
 246:../Libraries/XMCLib/src/xmc_usic.c **** {
 605              	 .loc 2 246 0
 606              	 .cfi_startproc
 607 0000 90B5     	 push {r4,r7,lr}
 608              	.LCFI18:
 609              	 .cfi_def_cfa_offset 12
 610              	 .cfi_offset 4,-12
 611              	 .cfi_offset 7,-8
 612              	 .cfi_offset 14,-4
 613 0002 87B0     	 sub sp,sp,#28
 614              	.LCFI19:
 615              	 .cfi_def_cfa_offset 40
 616 0004 00AF     	 add r7,sp,#0
 617              	.LCFI20:
 618              	 .cfi_def_cfa_register 7
 619 0006 7860     	 str r0,[r7,#4]
 247:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 248:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) == USIC_CH_BRG_CTQSEL_Msk)
 620              	 .loc 2 248 0
 621 0008 7B68     	 ldr r3,[r7,#4]
 622 000a 5B69     	 ldr r3,[r3,#20]
 623 000c C022     	 mov r2,#192
 624 000e 1340     	 and r3,r2
 625 0010 C02B     	 cmp r3,#192
 626 0012 02D1     	 bne .L31
 249:../Libraries/XMCLib/src/xmc_usic.c ****   {
 250:../Libraries/XMCLib/src/xmc_usic.c **** 	// CTQSEL = 3
 251:../Libraries/XMCLib/src/xmc_usic.c ****     divider = 2;
 627              	 .loc 2 251 0
 628 0014 0223     	 mov r3,#2
 629 0016 7B61     	 str r3,[r7,#20]
 630 0018 1EE0     	 b .L32
 631              	.L31:
 252:../Libraries/XMCLib/src/xmc_usic.c ****   }
 253:../Libraries/XMCLib/src/xmc_usic.c ****   else
 254:../Libraries/XMCLib/src/xmc_usic.c ****   {
 255:../Libraries/XMCLib/src/xmc_usic.c **** 	// CTQSEL = 0, 1, or 2
 256:../Libraries/XMCLib/src/xmc_usic.c ****     divider = (channel->BRG & USIC_CH_BRG_PPPEN_Msk) ? 2 : 1;
 632              	 .loc 2 256 0
 633 001a 7B68     	 ldr r3,[r7,#4]
 634 001c 5B69     	 ldr r3,[r3,#20]
 635 001e 1022     	 mov r2,#16
 636 0020 1340     	 and r3,r2
 637 0022 01D0     	 beq .L33
 638              	 .loc 2 256 0 is_stmt 0 discriminator 1
 639 0024 0223     	 mov r3,#2
 640 0026 00E0     	 b .L34
 641              	.L33:
 642              	 .loc 2 256 0 discriminator 2
 643 0028 0123     	 mov r3,#1
 644              	.L34:
 645              	 .loc 2 256 0 discriminator 4
 646 002a 7B61     	 str r3,[r7,#20]
 257:../Libraries/XMCLib/src/xmc_usic.c ****   
 258:../Libraries/XMCLib/src/xmc_usic.c ****     if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x1) == 0)
 647              	 .loc 2 258 0 is_stmt 1 discriminator 4
 648 002c 7B68     	 ldr r3,[r7,#4]
 649 002e 5B69     	 ldr r3,[r3,#20]
 650 0030 4022     	 mov r2,#64
 651 0032 1340     	 and r3,r2
 652 0034 10D1     	 bne .L32
 259:../Libraries/XMCLib/src/xmc_usic.c ****     {
 260:../Libraries/XMCLib/src/xmc_usic.c **** 	  // CTQSEL = 0 or 2
 261:../Libraries/XMCLib/src/xmc_usic.c ****       divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 653              	 .loc 2 261 0
 654 0036 7B68     	 ldr r3,[r7,#4]
 655 0038 5B69     	 ldr r3,[r3,#20]
 656 003a 3B4A     	 ldr r2,.L38
 657 003c 1340     	 and r3,r2
 658 003e 1B0C     	 lsr r3,r3,#16
 659 0040 5A1C     	 add r2,r3,#1
 660 0042 7B69     	 ldr r3,[r7,#20]
 661 0044 5343     	 mul r3,r2
 662 0046 7B61     	 str r3,[r7,#20]
 262:../Libraries/XMCLib/src/xmc_usic.c ****       if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x2) != 0)
 663              	 .loc 2 262 0
 664 0048 7B68     	 ldr r3,[r7,#4]
 665 004a 5B69     	 ldr r3,[r3,#20]
 666 004c 8022     	 mov r2,#128
 667 004e 1340     	 and r3,r2
 668 0050 02D0     	 beq .L32
 263:../Libraries/XMCLib/src/xmc_usic.c ****       {
 264:../Libraries/XMCLib/src/xmc_usic.c ****         // CTQSEL = 2
 265:../Libraries/XMCLib/src/xmc_usic.c ****         divider *= 2;
 669              	 .loc 2 265 0
 670 0052 7B69     	 ldr r3,[r7,#20]
 671 0054 5B00     	 lsl r3,r3,#1
 672 0056 7B61     	 str r3,[r7,#20]
 673              	.L32:
 266:../Libraries/XMCLib/src/xmc_usic.c ****       }
 267:../Libraries/XMCLib/src/xmc_usic.c ****     }
 268:../Libraries/XMCLib/src/xmc_usic.c ****   }
 269:../Libraries/XMCLib/src/xmc_usic.c **** 
 270:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PCTQ_Msk) >> USIC_CH_BRG_PCTQ_Pos) + 1;
 674              	 .loc 2 270 0
 675 0058 7B68     	 ldr r3,[r7,#4]
 676 005a 5A69     	 ldr r2,[r3,#20]
 677 005c C023     	 mov r3,#192
 678 005e 9B00     	 lsl r3,r3,#2
 679 0060 1340     	 and r3,r2
 680 0062 1B0A     	 lsr r3,r3,#8
 681 0064 5A1C     	 add r2,r3,#1
 682 0066 7B69     	 ldr r3,[r7,#20]
 683 0068 5343     	 mul r3,r2
 684 006a 7B61     	 str r3,[r7,#20]
 271:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_DCTQ_Msk) >> USIC_CH_BRG_DCTQ_Pos) + 1;
 685              	 .loc 2 271 0
 686 006c 7B68     	 ldr r3,[r7,#4]
 687 006e 5A69     	 ldr r2,[r3,#20]
 688 0070 F823     	 mov r3,#248
 689 0072 DB01     	 lsl r3,r3,#7
 690 0074 1340     	 and r3,r2
 691 0076 9B0A     	 lsr r3,r3,#10
 692 0078 5A1C     	 add r2,r3,#1
 693 007a 7B69     	 ldr r3,[r7,#20]
 694 007c 5343     	 mul r3,r2
 695 007e 7B61     	 str r3,[r7,#20]
 272:../Libraries/XMCLib/src/xmc_usic.c **** 
 273:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 696              	 .loc 2 273 0
 697 0080 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 698 0084 031C     	 mov r3,r0
 699 0086 FB60     	 str r3,[r7,#12]
 274:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 275:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 700              	 .loc 2 275 0
 701 0088 7B68     	 ldr r3,[r7,#4]
 702 008a 1A69     	 ldr r2,[r3,#16]
 703 008c C023     	 mov r3,#192
 704 008e 1B02     	 lsl r3,r3,#8
 705 0090 1A40     	 and r2,r3
 706 0092 8023     	 mov r3,#128
 707 0094 1B02     	 lsl r3,r3,#8
 708 0096 9A42     	 cmp r2,r3
 709 0098 18D1     	 bne .L35
 276:../Libraries/XMCLib/src/xmc_usic.c ****   {
 277:../Libraries/XMCLib/src/xmc_usic.c **** 	baudrate = fperi * (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 710              	 .loc 2 277 0
 711 009a F868     	 ldr r0,[r7,#12]
 712 009c FFF7FEFF 	 bl __aeabi_ui2f
 713 00a0 041C     	 add r4,r0,#0
 714 00a2 7B68     	 ldr r3,[r7,#4]
 715 00a4 1B69     	 ldr r3,[r3,#16]
 716 00a6 9B05     	 lsl r3,r3,#22
 717 00a8 9B0D     	 lsr r3,r3,#22
 718 00aa 181C     	 mov r0,r3
 719 00ac FFF7FEFF 	 bl __aeabi_ui2f
 720 00b0 031C     	 add r3,r0,#0
 721 00b2 181C     	 add r0,r3,#0
 722 00b4 8921     	 mov r1,#137
 723 00b6 C905     	 lsl r1,r1,#23
 724 00b8 FFF7FEFF 	 bl __aeabi_fdiv
 725 00bc 031C     	 add r3,r0,#0
 726 00be 201C     	 add r0,r4,#0
 727 00c0 191C     	 add r1,r3,#0
 728 00c2 FFF7FEFF 	 bl __aeabi_fmul
 729 00c6 031C     	 add r3,r0,#0
 730 00c8 3B61     	 str r3,[r7,#16]
 731 00ca 1AE0     	 b .L36
 732              	.L35:
 278:../Libraries/XMCLib/src/xmc_usic.c ****   }
 279:../Libraries/XMCLib/src/xmc_usic.c ****   else
 280:../Libraries/XMCLib/src/xmc_usic.c ****   {
 281:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 282:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 733              	 .loc 2 282 0
 734 00cc F868     	 ldr r0,[r7,#12]
 735 00ce FFF7FEFF 	 bl __aeabi_ui2f
 736 00d2 041C     	 add r4,r0,#0
 737 00d4 7B68     	 ldr r3,[r7,#4]
 738 00d6 1B69     	 ldr r3,[r3,#16]
 739 00d8 9B05     	 lsl r3,r3,#22
 740 00da 9B0D     	 lsr r3,r3,#22
 741 00dc 8022     	 mov r2,#128
 742 00de D200     	 lsl r2,r2,#3
 743 00e0 D31A     	 sub r3,r2,r3
 744 00e2 181C     	 mov r0,r3
 745 00e4 FFF7FEFF 	 bl __aeabi_ui2f
 746 00e8 031C     	 add r3,r0,#0
 747 00ea FE20     	 mov r0,#254
 748 00ec 8005     	 lsl r0,r0,#22
 749 00ee 191C     	 add r1,r3,#0
 750 00f0 FFF7FEFF 	 bl __aeabi_fdiv
 751 00f4 031C     	 add r3,r0,#0
 752 00f6 201C     	 add r0,r4,#0
 753 00f8 191C     	 add r1,r3,#0
 754 00fa FFF7FEFF 	 bl __aeabi_fmul
 755 00fe 031C     	 add r3,r0,#0
 756 0100 3B61     	 str r3,[r7,#16]
 757              	.L36:
 283:../Libraries/XMCLib/src/xmc_usic.c ****   }
 284:../Libraries/XMCLib/src/xmc_usic.c **** 
 285:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= divider;
 758              	 .loc 2 285 0
 759 0102 7869     	 ldr r0,[r7,#20]
 760 0104 FFF7FEFF 	 bl __aeabi_ui2f
 761 0108 031C     	 add r3,r0,#0
 762 010a 3869     	 ldr r0,[r7,#16]
 763 010c 191C     	 add r1,r3,#0
 764 010e FFF7FEFF 	 bl __aeabi_fdiv
 765 0112 031C     	 add r3,r0,#0
 766 0114 3B61     	 str r3,[r7,#16]
 286:../Libraries/XMCLib/src/xmc_usic.c **** 
 287:../Libraries/XMCLib/src/xmc_usic.c ****   return baudrate;
 767              	 .loc 2 287 0
 768 0116 3869     	 ldr r0,[r7,#16]
 769 0118 FFF7FEFF 	 bl __aeabi_f2uiz
 770 011c 031C     	 mov r3,r0
 288:../Libraries/XMCLib/src/xmc_usic.c **** }
 771              	 .loc 2 288 0
 772 011e 181C     	 mov r0,r3
 773 0120 BD46     	 mov sp,r7
 774 0122 07B0     	 add sp,sp,#28
 775              	 
 776 0124 90BD     	 pop {r4,r7,pc}
 777              	.L39:
 778 0126 C046     	 .align 2
 779              	.L38:
 780 0128 0000FF03 	 .word 67043328
 781              	 .cfi_endproc
 782              	.LFE130:
 784              	 .section .text.XMC_USIC_CH_GetSCLKFrequency,"ax",%progbits
 785              	 .align 2
 786              	 .global XMC_USIC_CH_GetSCLKFrequency
 787              	 .code 16
 788              	 .thumb_func
 790              	XMC_USIC_CH_GetSCLKFrequency:
 791              	.LFB131:
 289:../Libraries/XMCLib/src/xmc_usic.c **** 
 290:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel)
 291:../Libraries/XMCLib/src/xmc_usic.c **** {
 792              	 .loc 2 291 0
 793              	 .cfi_startproc
 794 0000 90B5     	 push {r4,r7,lr}
 795              	.LCFI21:
 796              	 .cfi_def_cfa_offset 12
 797              	 .cfi_offset 4,-12
 798              	 .cfi_offset 7,-8
 799              	 .cfi_offset 14,-4
 800 0002 87B0     	 sub sp,sp,#28
 801              	.LCFI22:
 802              	 .cfi_def_cfa_offset 40
 803 0004 00AF     	 add r7,sp,#0
 804              	.LCFI23:
 805              	 .cfi_def_cfa_register 7
 806 0006 7860     	 str r0,[r7,#4]
 292:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 293:../Libraries/XMCLib/src/xmc_usic.c ****   divider = (channel->BRG & USIC_CH_BRG_PPPEN_Msk) ? 2 : 1;
 807              	 .loc 2 293 0
 808 0008 7B68     	 ldr r3,[r7,#4]
 809 000a 5B69     	 ldr r3,[r3,#20]
 810 000c 1022     	 mov r2,#16
 811 000e 1340     	 and r3,r2
 812 0010 01D0     	 beq .L41
 813              	 .loc 2 293 0 is_stmt 0 discriminator 1
 814 0012 0223     	 mov r3,#2
 815 0014 00E0     	 b .L42
 816              	.L41:
 817              	 .loc 2 293 0 discriminator 2
 818 0016 0123     	 mov r3,#1
 819              	.L42:
 820              	 .loc 2 293 0 discriminator 4
 821 0018 3B61     	 str r3,[r7,#16]
 294:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 822              	 .loc 2 294 0 is_stmt 1 discriminator 4
 823 001a 7B68     	 ldr r3,[r7,#4]
 824 001c 5B69     	 ldr r3,[r3,#20]
 825 001e 2E4A     	 ldr r2,.L46
 826 0020 1340     	 and r3,r2
 827 0022 1B0C     	 lsr r3,r3,#16
 828 0024 5A1C     	 add r2,r3,#1
 829 0026 3B69     	 ldr r3,[r7,#16]
 830 0028 5343     	 mul r3,r2
 831 002a 3B61     	 str r3,[r7,#16]
 295:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= 2;
 832              	 .loc 2 295 0 discriminator 4
 833 002c 3B69     	 ldr r3,[r7,#16]
 834 002e 5B00     	 lsl r3,r3,#1
 835 0030 3B61     	 str r3,[r7,#16]
 296:../Libraries/XMCLib/src/xmc_usic.c **** 
 297:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 836              	 .loc 2 297 0 discriminator 4
 837 0032 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 838 0036 031C     	 mov r3,r0
 839 0038 FB60     	 str r3,[r7,#12]
 298:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 299:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 840              	 .loc 2 299 0 discriminator 4
 841 003a 7B68     	 ldr r3,[r7,#4]
 842 003c 1A69     	 ldr r2,[r3,#16]
 843 003e C023     	 mov r3,#192
 844 0040 1B02     	 lsl r3,r3,#8
 845 0042 1A40     	 and r2,r3
 846 0044 8023     	 mov r3,#128
 847 0046 1B02     	 lsl r3,r3,#8
 848 0048 9A42     	 cmp r2,r3
 849 004a 18D1     	 bne .L43
 300:../Libraries/XMCLib/src/xmc_usic.c ****   {
 301:../Libraries/XMCLib/src/xmc_usic.c ****     /* Fractional divider mode */
 302:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 850              	 .loc 2 302 0
 851 004c F868     	 ldr r0,[r7,#12]
 852 004e FFF7FEFF 	 bl __aeabi_ui2f
 853 0052 041C     	 add r4,r0,#0
 854 0054 7B68     	 ldr r3,[r7,#4]
 855 0056 1B69     	 ldr r3,[r3,#16]
 856 0058 9B05     	 lsl r3,r3,#22
 857 005a 9B0D     	 lsr r3,r3,#22
 858 005c 181C     	 mov r0,r3
 859 005e FFF7FEFF 	 bl __aeabi_ui2f
 860 0062 031C     	 add r3,r0,#0
 861 0064 181C     	 add r0,r3,#0
 862 0066 8921     	 mov r1,#137
 863 0068 C905     	 lsl r1,r1,#23
 864 006a FFF7FEFF 	 bl __aeabi_fdiv
 865 006e 031C     	 add r3,r0,#0
 866 0070 201C     	 add r0,r4,#0
 867 0072 191C     	 add r1,r3,#0
 868 0074 FFF7FEFF 	 bl __aeabi_fmul
 869 0078 031C     	 add r3,r0,#0
 870 007a 7B61     	 str r3,[r7,#20]
 871 007c 1AE0     	 b .L44
 872              	.L43:
 303:../Libraries/XMCLib/src/xmc_usic.c ****   }
 304:../Libraries/XMCLib/src/xmc_usic.c ****   else
 305:../Libraries/XMCLib/src/xmc_usic.c ****   {
 306:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 307:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 873              	 .loc 2 307 0
 874 007e F868     	 ldr r0,[r7,#12]
 875 0080 FFF7FEFF 	 bl __aeabi_ui2f
 876 0084 041C     	 add r4,r0,#0
 877 0086 7B68     	 ldr r3,[r7,#4]
 878 0088 1B69     	 ldr r3,[r3,#16]
 879 008a 9B05     	 lsl r3,r3,#22
 880 008c 9B0D     	 lsr r3,r3,#22
 881 008e 8022     	 mov r2,#128
 882 0090 D200     	 lsl r2,r2,#3
 883 0092 D31A     	 sub r3,r2,r3
 884 0094 181C     	 mov r0,r3
 885 0096 FFF7FEFF 	 bl __aeabi_ui2f
 886 009a 031C     	 add r3,r0,#0
 887 009c FE20     	 mov r0,#254
 888 009e 8005     	 lsl r0,r0,#22
 889 00a0 191C     	 add r1,r3,#0
 890 00a2 FFF7FEFF 	 bl __aeabi_fdiv
 891 00a6 031C     	 add r3,r0,#0
 892 00a8 201C     	 add r0,r4,#0
 893 00aa 191C     	 add r1,r3,#0
 894 00ac FFF7FEFF 	 bl __aeabi_fmul
 895 00b0 031C     	 add r3,r0,#0
 896 00b2 7B61     	 str r3,[r7,#20]
 897              	.L44:
 308:../Libraries/XMCLib/src/xmc_usic.c ****   }
 309:../Libraries/XMCLib/src/xmc_usic.c **** 
 310:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= divider;
 898              	 .loc 2 310 0
 899 00b4 3869     	 ldr r0,[r7,#16]
 900 00b6 FFF7FEFF 	 bl __aeabi_ui2f
 901 00ba 031C     	 add r3,r0,#0
 902 00bc 7869     	 ldr r0,[r7,#20]
 903 00be 191C     	 add r1,r3,#0
 904 00c0 FFF7FEFF 	 bl __aeabi_fdiv
 905 00c4 031C     	 add r3,r0,#0
 906 00c6 7B61     	 str r3,[r7,#20]
 311:../Libraries/XMCLib/src/xmc_usic.c **** 
 312:../Libraries/XMCLib/src/xmc_usic.c ****   return baudrate;
 907              	 .loc 2 312 0
 908 00c8 7869     	 ldr r0,[r7,#20]
 909 00ca FFF7FEFF 	 bl __aeabi_f2uiz
 910 00ce 031C     	 mov r3,r0
 313:../Libraries/XMCLib/src/xmc_usic.c **** }
 911              	 .loc 2 313 0
 912 00d0 181C     	 mov r0,r3
 913 00d2 BD46     	 mov sp,r7
 914 00d4 07B0     	 add sp,sp,#28
 915              	 
 916 00d6 90BD     	 pop {r4,r7,pc}
 917              	.L47:
 918              	 .align 2
 919              	.L46:
 920 00d8 0000FF03 	 .word 67043328
 921              	 .cfi_endproc
 922              	.LFE131:
 924              	 .section .text.XMC_USIC_CH_GetMCLKFrequency,"ax",%progbits
 925              	 .align 2
 926              	 .global XMC_USIC_CH_GetMCLKFrequency
 927              	 .code 16
 928              	 .thumb_func
 930              	XMC_USIC_CH_GetMCLKFrequency:
 931              	.LFB132:
 314:../Libraries/XMCLib/src/xmc_usic.c **** 
 315:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel)
 316:../Libraries/XMCLib/src/xmc_usic.c **** {
 932              	 .loc 2 316 0
 933              	 .cfi_startproc
 934 0000 90B5     	 push {r4,r7,lr}
 935              	.LCFI24:
 936              	 .cfi_def_cfa_offset 12
 937              	 .cfi_offset 4,-12
 938              	 .cfi_offset 7,-8
 939              	 .cfi_offset 14,-4
 940 0002 85B0     	 sub sp,sp,#20
 941              	.LCFI25:
 942              	 .cfi_def_cfa_offset 32
 943 0004 00AF     	 add r7,sp,#0
 944              	.LCFI26:
 945              	 .cfi_def_cfa_register 7
 946 0006 7860     	 str r0,[r7,#4]
 317:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 947              	 .loc 2 317 0
 948 0008 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 949 000c 031C     	 mov r3,r0
 950 000e BB60     	 str r3,[r7,#8]
 318:../Libraries/XMCLib/src/xmc_usic.c **** 
 319:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 320:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 951              	 .loc 2 320 0
 952 0010 7B68     	 ldr r3,[r7,#4]
 953 0012 1A69     	 ldr r2,[r3,#16]
 954 0014 C023     	 mov r3,#192
 955 0016 1B02     	 lsl r3,r3,#8
 956 0018 1A40     	 and r2,r3
 957 001a 8023     	 mov r3,#128
 958 001c 1B02     	 lsl r3,r3,#8
 959 001e 9A42     	 cmp r2,r3
 960 0020 1BD1     	 bne .L49
 321:../Libraries/XMCLib/src/xmc_usic.c ****   {
 322:../Libraries/XMCLib/src/xmc_usic.c ****     /* Fractional divider mode */
 323:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 961              	 .loc 2 323 0
 962 0022 B868     	 ldr r0,[r7,#8]
 963 0024 FFF7FEFF 	 bl __aeabi_ui2f
 964 0028 041C     	 add r4,r0,#0
 965 002a 7B68     	 ldr r3,[r7,#4]
 966 002c 1B69     	 ldr r3,[r3,#16]
 967 002e 9B05     	 lsl r3,r3,#22
 968 0030 9B0D     	 lsr r3,r3,#22
 969 0032 8022     	 mov r2,#128
 970 0034 D200     	 lsl r2,r2,#3
 971 0036 D31A     	 sub r3,r2,r3
 972 0038 181C     	 mov r0,r3
 973 003a FFF7FEFF 	 bl __aeabi_ui2f
 974 003e 031C     	 add r3,r0,#0
 975 0040 FE20     	 mov r0,#254
 976 0042 8005     	 lsl r0,r0,#22
 977 0044 191C     	 add r1,r3,#0
 978 0046 FFF7FEFF 	 bl __aeabi_fdiv
 979 004a 031C     	 add r3,r0,#0
 980 004c 201C     	 add r0,r4,#0
 981 004e 191C     	 add r1,r3,#0
 982 0050 FFF7FEFF 	 bl __aeabi_fmul
 983 0054 031C     	 add r3,r0,#0
 984 0056 FB60     	 str r3,[r7,#12]
 985 0058 17E0     	 b .L50
 986              	.L49:
 324:../Libraries/XMCLib/src/xmc_usic.c ****   }
 325:../Libraries/XMCLib/src/xmc_usic.c ****   else
 326:../Libraries/XMCLib/src/xmc_usic.c ****   {
 327:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 328:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi / (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 987              	 .loc 2 328 0
 988 005a B868     	 ldr r0,[r7,#8]
 989 005c FFF7FEFF 	 bl __aeabi_ui2f
 990 0060 041C     	 add r4,r0,#0
 991 0062 7B68     	 ldr r3,[r7,#4]
 992 0064 1B69     	 ldr r3,[r3,#16]
 993 0066 9B05     	 lsl r3,r3,#22
 994 0068 9B0D     	 lsr r3,r3,#22
 995 006a 181C     	 mov r0,r3
 996 006c FFF7FEFF 	 bl __aeabi_ui2f
 997 0070 031C     	 add r3,r0,#0
 998 0072 181C     	 add r0,r3,#0
 999 0074 8921     	 mov r1,#137
 1000 0076 C905     	 lsl r1,r1,#23
 1001 0078 FFF7FEFF 	 bl __aeabi_fdiv
 1002 007c 031C     	 add r3,r0,#0
 1003 007e 201C     	 add r0,r4,#0
 1004 0080 191C     	 add r1,r3,#0
 1005 0082 FFF7FEFF 	 bl __aeabi_fdiv
 1006 0086 031C     	 add r3,r0,#0
 1007 0088 FB60     	 str r3,[r7,#12]
 1008              	.L50:
 329:../Libraries/XMCLib/src/xmc_usic.c ****   }
 330:../Libraries/XMCLib/src/xmc_usic.c **** 
 331:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= 2;
 1009              	 .loc 2 331 0
 1010 008a F868     	 ldr r0,[r7,#12]
 1011 008c 8021     	 mov r1,#128
 1012 008e C905     	 lsl r1,r1,#23
 1013 0090 FFF7FEFF 	 bl __aeabi_fdiv
 1014 0094 031C     	 add r3,r0,#0
 1015 0096 FB60     	 str r3,[r7,#12]
 332:../Libraries/XMCLib/src/xmc_usic.c **** 
 333:../Libraries/XMCLib/src/xmc_usic.c ****   return baudrate;
 1016              	 .loc 2 333 0
 1017 0098 F868     	 ldr r0,[r7,#12]
 1018 009a FFF7FEFF 	 bl __aeabi_f2uiz
 1019 009e 031C     	 mov r3,r0
 334:../Libraries/XMCLib/src/xmc_usic.c **** }
 1020              	 .loc 2 334 0
 1021 00a0 181C     	 mov r0,r3
 1022 00a2 BD46     	 mov sp,r7
 1023 00a4 05B0     	 add sp,sp,#20
 1024              	 
 1025 00a6 90BD     	 pop {r4,r7,pc}
 1026              	 .cfi_endproc
 1027              	.LFE132:
 1029              	 .section .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG,"ax",%progbits
 1030              	 .align 2
 1031              	 .global XMC_USIC_CH_ConfigExternalInputSignalToBRG
 1032              	 .code 16
 1033              	 .thumb_func
 1035              	XMC_USIC_CH_ConfigExternalInputSignalToBRG:
 1036              	.LFB133:
 335:../Libraries/XMCLib/src/xmc_usic.c **** 
 336:../Libraries/XMCLib/src/xmc_usic.c **** 
 337:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 338:../Libraries/XMCLib/src/xmc_usic.c **** 		                                        const uint16_t pdiv,
 339:../Libraries/XMCLib/src/xmc_usic.c **** 												const uint32_t oversampling,
 340:../Libraries/XMCLib/src/xmc_usic.c **** 												const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
 341:../Libraries/XMCLib/src/xmc_usic.c **** {
 1037              	 .loc 2 341 0
 1038              	 .cfi_startproc
 1039 0000 80B5     	 push {r7,lr}
 1040              	.LCFI27:
 1041              	 .cfi_def_cfa_offset 8
 1042              	 .cfi_offset 7,-8
 1043              	 .cfi_offset 14,-4
 1044 0002 84B0     	 sub sp,sp,#16
 1045              	.LCFI28:
 1046              	 .cfi_def_cfa_offset 24
 1047 0004 00AF     	 add r7,sp,#0
 1048              	.LCFI29:
 1049              	 .cfi_def_cfa_register 7
 1050 0006 F860     	 str r0,[r7,#12]
 1051 0008 081C     	 mov r0,r1
 1052 000a 7A60     	 str r2,[r7,#4]
 1053 000c 191C     	 mov r1,r3
 1054 000e 0A23     	 mov r3,#10
 1055 0010 FB18     	 add r3,r7,r3
 1056 0012 021C     	 add r2,r0,#0
 1057 0014 1A80     	 strh r2,[r3]
 1058 0016 0923     	 mov r3,#9
 1059 0018 FB18     	 add r3,r7,r3
 1060 001a 0A1C     	 add r2,r1,#0
 1061 001c 1A70     	 strb r2,[r3]
 342:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Divider out of range", ((1U < pdiv) || (p
 343:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Oversampling out of range", ((1U < oversa
 344:../Libraries/XMCLib/src/xmc_usic.c **** 
 345:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the external input frequency source through DX1 */
 346:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetBRGInputClockSource(channel, XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T);
 1062              	 .loc 2 346 0
 1063 001e FB68     	 ldr r3,[r7,#12]
 1064 0020 181C     	 mov r0,r3
 1065 0022 0221     	 mov r1,#2
 1066 0024 FFF7FEFF 	 bl XMC_USIC_CH_SetBRGInputClockSource
 347:../Libraries/XMCLib/src/xmc_usic.c **** 
 348:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the trigger combination mode */
 349:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetInputTriggerCombinationMode(channel,XMC_USIC_CH_INPUT_DX1,combination_mode);
 1067              	 .loc 2 349 0
 1068 0028 FA68     	 ldr r2,[r7,#12]
 1069 002a 0923     	 mov r3,#9
 1070 002c FB18     	 add r3,r7,r3
 1071 002e 1B78     	 ldrb r3,[r3]
 1072 0030 101C     	 mov r0,r2
 1073 0032 0121     	 mov r1,#1
 1074 0034 1A1C     	 mov r2,r3
 1075 0036 FFF7FEFF 	 bl XMC_USIC_CH_SetInputTriggerCombinationMode
 350:../Libraries/XMCLib/src/xmc_usic.c **** 
 351:../Libraries/XMCLib/src/xmc_usic.c ****   /* Configuring the dividers and oversampling */
 352:../Libraries/XMCLib/src/xmc_usic.c ****   channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 1076              	 .loc 2 352 0
 1077 003a FB68     	 ldr r3,[r7,#12]
 1078 003c 5B69     	 ldr r3,[r3,#20]
 1079 003e 084A     	 ldr r2,.L53
 1080 0040 1A40     	 and r2,r3
 353:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 354:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PCTQ_Msk |
 355:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PPPEN_Msk)) |
 356:../Libraries/XMCLib/src/xmc_usic.c ****                   (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 1081              	 .loc 2 356 0
 1082 0042 7B68     	 ldr r3,[r7,#4]
 1083 0044 013B     	 sub r3,r3,#1
 1084 0046 9B02     	 lsl r3,r3,#10
 355:../Libraries/XMCLib/src/xmc_usic.c ****                   (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 1085              	 .loc 2 355 0
 1086 0048 1A43     	 orr r2,r3
 357:../Libraries/XMCLib/src/xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 1087              	 .loc 2 357 0
 1088 004a 0A23     	 mov r3,#10
 1089 004c FB18     	 add r3,r7,r3
 1090 004e 1B88     	 ldrh r3,[r3]
 1091 0050 013B     	 sub r3,r3,#1
 1092 0052 1B04     	 lsl r3,r3,#16
 356:../Libraries/XMCLib/src/xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 1093              	 .loc 2 356 0
 1094 0054 1A43     	 orr r2,r3
 352:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 1095              	 .loc 2 352 0
 1096 0056 FB68     	 ldr r3,[r7,#12]
 1097 0058 5A61     	 str r2,[r3,#20]
 358:../Libraries/XMCLib/src/xmc_usic.c **** }
 1098              	 .loc 2 358 0
 1099 005a BD46     	 mov sp,r7
 1100 005c 04B0     	 add sp,sp,#16
 1101              	 
 1102 005e 80BD     	 pop {r7,pc}
 1103              	.L54:
 1104              	 .align 2
 1105              	.L53:
 1106 0060 EF8000FC 	 .word -67075857
 1107              	 .cfi_endproc
 1108              	.LFE133:
 1110              	 .section .text.XMC_USIC_CH_TXFIFO_Configure,"ax",%progbits
 1111              	 .align 2
 1112              	 .global XMC_USIC_CH_TXFIFO_Configure
 1113              	 .code 16
 1114              	 .thumb_func
 1116              	XMC_USIC_CH_TXFIFO_Configure:
 1117              	.LFB134:
 359:../Libraries/XMCLib/src/xmc_usic.c **** 
 360:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
 361:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 362:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 363:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 364:../Libraries/XMCLib/src/xmc_usic.c **** {
 1118              	 .loc 2 364 0
 1119              	 .cfi_startproc
 1120 0000 80B5     	 push {r7,lr}
 1121              	.LCFI30:
 1122              	 .cfi_def_cfa_offset 8
 1123              	 .cfi_offset 7,-8
 1124              	 .cfi_offset 14,-4
 1125 0002 84B0     	 sub sp,sp,#16
 1126              	.LCFI31:
 1127              	 .cfi_def_cfa_offset 24
 1128 0004 00AF     	 add r7,sp,#0
 1129              	.LCFI32:
 1130              	 .cfi_def_cfa_register 7
 1131 0006 F860     	 str r0,[r7,#12]
 1132 0008 B960     	 str r1,[r7,#8]
 1133 000a 3B60     	 str r3,[r7]
 1134 000c FB1D     	 add r3,r7,#7
 1135 000e 1A70     	 strb r2,[r3]
 365:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 366:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 1136              	 .loc 2 366 0
 1137 0010 FA68     	 ldr r2,[r7,#12]
 1138 0012 8423     	 mov r3,#132
 1139 0014 5B00     	 lsl r3,r3,#1
 1140 0016 D358     	 ldr r3,[r2,r3]
 1141 0018 0E4A     	 ldr r2,.L56
 1142 001a 1340     	 and r3,r2
 1143 001c 191C     	 mov r1,r3
 1144 001e FA68     	 ldr r2,[r7,#12]
 1145 0020 8423     	 mov r3,#132
 1146 0022 5B00     	 lsl r3,r3,#1
 1147 0024 D150     	 str r1,[r2,r3]
 367:../Libraries/XMCLib/src/xmc_usic.c **** 
 368:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 0, A standard transmit buffer event occurs when the filling level equals the limit value
 369:../Libraries/XMCLib/src/xmc_usic.c ****    * lower due to transmission of a data word
 370:../Libraries/XMCLib/src/xmc_usic.c ****    * STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 371:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 372:../Libraries/XMCLib/src/xmc_usic.c ****    */
 373:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)(channel->TBCTR & (uint32_t)~(USIC_CH_TBCTR_LIMIT_Msk |
 1148              	 .loc 2 373 0
 1149 0026 FA68     	 ldr r2,[r7,#12]
 1150 0028 8423     	 mov r3,#132
 1151 002a 5B00     	 lsl r3,r3,#1
 1152 002c D358     	 ldr r3,[r2,r3]
 1153 002e 0A4A     	 ldr r2,.L56+4
 1154 0030 1A40     	 and r2,r3
 374:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 375:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_SIZE_Msk)) |
 376:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1155              	 .loc 2 376 0
 1156 0032 3B68     	 ldr r3,[r7]
 1157 0034 1902     	 lsl r1,r3,#8
 1158 0036 BB68     	 ldr r3,[r7,#8]
 1159 0038 1943     	 orr r1,r3
 377:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 378:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 1160              	 .loc 2 378 0
 1161 003a FB1D     	 add r3,r7,#7
 1162 003c 1B78     	 ldrb r3,[r3]
 1163 003e 1B06     	 lsl r3,r3,#24
 376:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 1164              	 .loc 2 376 0
 1165 0040 0B43     	 orr r3,r1
 375:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1166              	 .loc 2 375 0
 1167 0042 1A43     	 orr r2,r3
 1168 0044 111C     	 mov r1,r2
 373:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 1169              	 .loc 2 373 0
 1170 0046 FA68     	 ldr r2,[r7,#12]
 1171 0048 8423     	 mov r3,#132
 1172 004a 5B00     	 lsl r3,r3,#1
 1173 004c D150     	 str r1,[r2,r3]
 379:../Libraries/XMCLib/src/xmc_usic.c **** }
 1174              	 .loc 2 379 0
 1175 004e BD46     	 mov sp,r7
 1176 0050 04B0     	 add sp,sp,#16
 1177              	 
 1178 0052 80BD     	 pop {r7,pc}
 1179              	.L57:
 1180              	 .align 2
 1181              	.L56:
 1182 0054 FFFFFFF8 	 .word -117440513
 1183 0058 C0C0FFF8 	 .word -117456704
 1184              	 .cfi_endproc
 1185              	.LFE134:
 1187              	 .section .text.XMC_USIC_CH_RXFIFO_Configure,"ax",%progbits
 1188              	 .align 2
 1189              	 .global XMC_USIC_CH_RXFIFO_Configure
 1190              	 .code 16
 1191              	 .thumb_func
 1193              	XMC_USIC_CH_RXFIFO_Configure:
 1194              	.LFB135:
 380:../Libraries/XMCLib/src/xmc_usic.c **** 
 381:../Libraries/XMCLib/src/xmc_usic.c **** 
 382:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
 383:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 384:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 385:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 386:../Libraries/XMCLib/src/xmc_usic.c **** {
 1195              	 .loc 2 386 0
 1196              	 .cfi_startproc
 1197 0000 80B5     	 push {r7,lr}
 1198              	.LCFI33:
 1199              	 .cfi_def_cfa_offset 8
 1200              	 .cfi_offset 7,-8
 1201              	 .cfi_offset 14,-4
 1202 0002 84B0     	 sub sp,sp,#16
 1203              	.LCFI34:
 1204              	 .cfi_def_cfa_offset 24
 1205 0004 00AF     	 add r7,sp,#0
 1206              	.LCFI35:
 1207              	 .cfi_def_cfa_register 7
 1208 0006 F860     	 str r0,[r7,#12]
 1209 0008 B960     	 str r1,[r7,#8]
 1210 000a 3B60     	 str r3,[r7]
 1211 000c FB1D     	 add r3,r7,#7
 1212 000e 1A70     	 strb r2,[r3]
 387:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 388:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 1213              	 .loc 2 388 0
 1214 0010 FA68     	 ldr r2,[r7,#12]
 1215 0012 8623     	 mov r3,#134
 1216 0014 5B00     	 lsl r3,r3,#1
 1217 0016 D358     	 ldr r3,[r2,r3]
 1218 0018 104A     	 ldr r2,.L59
 1219 001a 1340     	 and r3,r2
 1220 001c 191C     	 mov r1,r3
 1221 001e FA68     	 ldr r2,[r7,#12]
 1222 0020 8623     	 mov r3,#134
 1223 0022 5B00     	 lsl r3,r3,#1
 1224 0024 D150     	 str r1,[r2,r3]
 389:../Libraries/XMCLib/src/xmc_usic.c **** 
 390:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 1, A standard receive buffer event occurs when the filling level equals the limit value 
 391:../Libraries/XMCLib/src/xmc_usic.c ****    *  due to the reception of a new data word
 392:../Libraries/XMCLib/src/xmc_usic.c ****    */
 393:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (uint32_t)~(USIC_CH_RBCTR_LIMIT_Msk |
 1225              	 .loc 2 393 0
 1226 0026 FA68     	 ldr r2,[r7,#12]
 1227 0028 8623     	 mov r3,#134
 1228 002a 5B00     	 lsl r3,r3,#1
 1229 002c D358     	 ldr r3,[r2,r3]
 1230 002e 0C4A     	 ldr r2,.L59+4
 1231 0030 1A40     	 and r2,r3
 394:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 395:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_LOF_Msk)) |
 396:../Libraries/XMCLib/src/xmc_usic.c ****                    ((limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1232              	 .loc 2 396 0
 1233 0032 3B68     	 ldr r3,[r7]
 1234 0034 1902     	 lsl r1,r3,#8
 1235 0036 BB68     	 ldr r3,[r7,#8]
 1236 0038 1943     	 orr r1,r3
 397:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 398:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos) |
 1237              	 .loc 2 398 0
 1238 003a FB1D     	 add r3,r7,#7
 1239 003c 1B78     	 ldrb r3,[r3]
 1240 003e 1B06     	 lsl r3,r3,#24
 397:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 1241              	 .loc 2 397 0
 1242 0040 0B43     	 orr r3,r1
 393:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 1243              	 .loc 2 393 0
 1244 0042 1343     	 orr r3,r2
 1245 0044 8022     	 mov r2,#128
 1246 0046 5205     	 lsl r2,r2,#21
 1247 0048 1A43     	 orr r2,r3
 1248 004a 111C     	 mov r1,r2
 1249 004c FA68     	 ldr r2,[r7,#12]
 1250 004e 8623     	 mov r3,#134
 1251 0050 5B00     	 lsl r3,r3,#1
 1252 0052 D150     	 str r1,[r2,r3]
 399:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)USIC_CH_RBCTR_LOF_Msk));
 400:../Libraries/XMCLib/src/xmc_usic.c **** }
 1253              	 .loc 2 400 0
 1254 0054 BD46     	 mov sp,r7
 1255 0056 04B0     	 add sp,sp,#16
 1256              	 
 1257 0058 80BD     	 pop {r7,pc}
 1258              	.L60:
 1259 005a C046     	 .align 2
 1260              	.L59:
 1261 005c FFFFFFF8 	 .word -117440513
 1262 0060 C0C0FFEF 	 .word -268451648
 1263              	 .cfi_endproc
 1264              	.LFE135:
 1266              	 .section .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit,"ax",%progbits
 1267              	 .align 2
 1268              	 .global XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
 1269              	 .code 16
 1270              	 .thumb_func
 1272              	XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:
 1273              	.LFB136:
 401:../Libraries/XMCLib/src/xmc_usic.c **** 
 402:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 403:../Libraries/XMCLib/src/xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 404:../Libraries/XMCLib/src/xmc_usic.c ****                                             const uint32_t limit)
 405:../Libraries/XMCLib/src/xmc_usic.c **** {
 1274              	 .loc 2 405 0
 1275              	 .cfi_startproc
 1276 0000 80B5     	 push {r7,lr}
 1277              	.LCFI36:
 1278              	 .cfi_def_cfa_offset 8
 1279              	 .cfi_offset 7,-8
 1280              	 .cfi_offset 14,-4
 1281 0002 84B0     	 sub sp,sp,#16
 1282              	.LCFI37:
 1283              	 .cfi_def_cfa_offset 24
 1284 0004 00AF     	 add r7,sp,#0
 1285              	.LCFI38:
 1286              	 .cfi_def_cfa_register 7
 1287 0006 F860     	 str r0,[r7,#12]
 1288 0008 7A60     	 str r2,[r7,#4]
 1289 000a 0B23     	 mov r3,#11
 1290 000c FB18     	 add r3,r7,r3
 1291 000e 0A1C     	 add r2,r1,#0
 1292 0010 1A70     	 strb r2,[r3]
 406:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 407:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 1293              	 .loc 2 407 0
 1294 0012 FA68     	 ldr r2,[r7,#12]
 1295 0014 8423     	 mov r3,#132
 1296 0016 5B00     	 lsl r3,r3,#1
 1297 0018 D358     	 ldr r3,[r2,r3]
 1298 001a 0E4A     	 ldr r2,.L62
 1299 001c 1340     	 and r3,r2
 1300 001e 191C     	 mov r1,r3
 1301 0020 FA68     	 ldr r2,[r7,#12]
 1302 0022 8423     	 mov r3,#132
 1303 0024 5B00     	 lsl r3,r3,#1
 1304 0026 D150     	 str r1,[r2,r3]
 408:../Libraries/XMCLib/src/xmc_usic.c **** 
 409:../Libraries/XMCLib/src/xmc_usic.c ****   /* STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 410:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 411:../Libraries/XMCLib/src/xmc_usic.c ****    */
 412:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((uint32_t)(channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) |
 1305              	 .loc 2 412 0
 1306 0028 FA68     	 ldr r2,[r7,#12]
 1307 002a 8423     	 mov r3,#132
 1308 002c 5B00     	 lsl r3,r3,#1
 1309 002e D358     	 ldr r3,[r2,r3]
 1310 0030 094A     	 ldr r2,.L62+4
 1311 0032 1A40     	 and r2,r3
 413:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1312              	 .loc 2 413 0
 1313 0034 7B68     	 ldr r3,[r7,#4]
 1314 0036 1B02     	 lsl r3,r3,#8
 412:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1315              	 .loc 2 412 0
 1316 0038 1A43     	 orr r2,r3
 414:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 1317              	 .loc 2 414 0
 1318 003a 0B23     	 mov r3,#11
 1319 003c FB18     	 add r3,r7,r3
 1320 003e 1B78     	 ldrb r3,[r3]
 1321 0040 1B06     	 lsl r3,r3,#24
 412:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1322              	 .loc 2 412 0
 1323 0042 1A43     	 orr r2,r3
 1324 0044 111C     	 mov r1,r2
 1325 0046 FA68     	 ldr r2,[r7,#12]
 1326 0048 8423     	 mov r3,#132
 1327 004a 5B00     	 lsl r3,r3,#1
 1328 004c D150     	 str r1,[r2,r3]
 415:../Libraries/XMCLib/src/xmc_usic.c **** }
 1329              	 .loc 2 415 0
 1330 004e BD46     	 mov sp,r7
 1331 0050 04B0     	 add sp,sp,#16
 1332              	 
 1333 0052 80BD     	 pop {r7,pc}
 1334              	.L63:
 1335              	 .align 2
 1336              	.L62:
 1337 0054 FFFFFFF8 	 .word -117440513
 1338 0058 FFC0FFFF 	 .word -16129
 1339              	 .cfi_endproc
 1340              	.LFE136:
 1342              	 .section .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit,"ax",%progbits
 1343              	 .align 2
 1344              	 .global XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
 1345              	 .code 16
 1346              	 .thumb_func
 1348              	XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:
 1349              	.LFB137:
 416:../Libraries/XMCLib/src/xmc_usic.c **** 
 417:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 418:../Libraries/XMCLib/src/xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 419:../Libraries/XMCLib/src/xmc_usic.c ****                                             const uint32_t limit)
 420:../Libraries/XMCLib/src/xmc_usic.c **** {
 1350              	 .loc 2 420 0
 1351              	 .cfi_startproc
 1352 0000 80B5     	 push {r7,lr}
 1353              	.LCFI39:
 1354              	 .cfi_def_cfa_offset 8
 1355              	 .cfi_offset 7,-8
 1356              	 .cfi_offset 14,-4
 1357 0002 84B0     	 sub sp,sp,#16
 1358              	.LCFI40:
 1359              	 .cfi_def_cfa_offset 24
 1360 0004 00AF     	 add r7,sp,#0
 1361              	.LCFI41:
 1362              	 .cfi_def_cfa_register 7
 1363 0006 F860     	 str r0,[r7,#12]
 1364 0008 7A60     	 str r2,[r7,#4]
 1365 000a 0B23     	 mov r3,#11
 1366 000c FB18     	 add r3,r7,r3
 1367 000e 0A1C     	 add r2,r1,#0
 1368 0010 1A70     	 strb r2,[r3]
 421:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 422:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 1369              	 .loc 2 422 0
 1370 0012 FA68     	 ldr r2,[r7,#12]
 1371 0014 8623     	 mov r3,#134
 1372 0016 5B00     	 lsl r3,r3,#1
 1373 0018 D358     	 ldr r3,[r2,r3]
 1374 001a 0E4A     	 ldr r2,.L65
 1375 001c 1340     	 and r3,r2
 1376 001e 191C     	 mov r1,r3
 1377 0020 FA68     	 ldr r2,[r7,#12]
 1378 0022 8623     	 mov r3,#134
 1379 0024 5B00     	 lsl r3,r3,#1
 1380 0026 D150     	 str r1,[r2,r3]
 423:../Libraries/XMCLib/src/xmc_usic.c **** 
 424:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((uint32_t)(channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) |
 1381              	 .loc 2 424 0
 1382 0028 FA68     	 ldr r2,[r7,#12]
 1383 002a 8623     	 mov r3,#134
 1384 002c 5B00     	 lsl r3,r3,#1
 1385 002e D358     	 ldr r3,[r2,r3]
 1386 0030 094A     	 ldr r2,.L65+4
 1387 0032 1A40     	 and r2,r3
 425:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1388              	 .loc 2 425 0
 1389 0034 7B68     	 ldr r3,[r7,#4]
 1390 0036 1B02     	 lsl r3,r3,#8
 424:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1391              	 .loc 2 424 0
 1392 0038 1A43     	 orr r2,r3
 426:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos));
 1393              	 .loc 2 426 0
 1394 003a 0B23     	 mov r3,#11
 1395 003c FB18     	 add r3,r7,r3
 1396 003e 1B78     	 ldrb r3,[r3]
 1397 0040 1B06     	 lsl r3,r3,#24
 424:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1398              	 .loc 2 424 0
 1399 0042 1A43     	 orr r2,r3
 1400 0044 111C     	 mov r1,r2
 1401 0046 FA68     	 ldr r2,[r7,#12]
 1402 0048 8623     	 mov r3,#134
 1403 004a 5B00     	 lsl r3,r3,#1
 1404 004c D150     	 str r1,[r2,r3]
 427:../Libraries/XMCLib/src/xmc_usic.c **** }
 1405              	 .loc 2 427 0
 1406 004e BD46     	 mov sp,r7
 1407 0050 04B0     	 add sp,sp,#16
 1408              	 
 1409 0052 80BD     	 pop {r7,pc}
 1410              	.L66:
 1411              	 .align 2
 1412              	.L65:
 1413 0054 FFFFFFF8 	 .word -117440513
 1414 0058 FFC0FFFF 	 .word -16129
 1415              	 .cfi_endproc
 1416              	.LFE137:
 1418              	 .section .text.XMC_USIC_CH_SetInterruptNodePointer,"ax",%progbits
 1419              	 .align 2
 1420              	 .global XMC_USIC_CH_SetInterruptNodePointer
 1421              	 .code 16
 1422              	 .thumb_func
 1424              	XMC_USIC_CH_SetInterruptNodePointer:
 1425              	.LFB138:
 428:../Libraries/XMCLib/src/xmc_usic.c **** 
 429:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 430:../Libraries/XMCLib/src/xmc_usic.c ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
 431:../Libraries/XMCLib/src/xmc_usic.c ****                                          const uint32_t service_request)
 432:../Libraries/XMCLib/src/xmc_usic.c **** {
 1426              	 .loc 2 432 0
 1427              	 .cfi_startproc
 1428 0000 80B5     	 push {r7,lr}
 1429              	.LCFI42:
 1430              	 .cfi_def_cfa_offset 8
 1431              	 .cfi_offset 7,-8
 1432              	 .cfi_offset 14,-4
 1433 0002 84B0     	 sub sp,sp,#16
 1434              	.LCFI43:
 1435              	 .cfi_def_cfa_offset 24
 1436 0004 00AF     	 add r7,sp,#0
 1437              	.LCFI44:
 1438              	 .cfi_def_cfa_register 7
 1439 0006 F860     	 str r0,[r7,#12]
 1440 0008 7A60     	 str r2,[r7,#4]
 1441 000a 0B23     	 mov r3,#11
 1442 000c FB18     	 add r3,r7,r3
 1443 000e 0A1C     	 add r2,r1,#0
 1444 0010 1A70     	 strb r2,[r3]
 433:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 1445              	 .loc 2 433 0
 1446 0012 FB68     	 ldr r3,[r7,#12]
 1447 0014 9B69     	 ldr r3,[r3,#24]
 1448 0016 0B22     	 mov r2,#11
 1449 0018 BA18     	 add r2,r7,r2
 1450 001a 1278     	 ldrb r2,[r2]
 1451 001c 0721     	 mov r1,#7
 1452 001e 9140     	 lsl r1,r1,r2
 1453 0020 0A1C     	 mov r2,r1
 1454 0022 D243     	 mvn r2,r2
 1455 0024 1A40     	 and r2,r3
 434:../Libraries/XMCLib/src/xmc_usic.c ****                   (service_request << (uint32_t)interrupt_node));
 1456              	 .loc 2 434 0
 1457 0026 0B23     	 mov r3,#11
 1458 0028 FB18     	 add r3,r7,r3
 1459 002a 1B78     	 ldrb r3,[r3]
 1460 002c 7968     	 ldr r1,[r7,#4]
 1461 002e 9940     	 lsl r1,r1,r3
 1462 0030 0B1C     	 mov r3,r1
 433:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 1463              	 .loc 2 433 0
 1464 0032 1A43     	 orr r2,r3
 1465 0034 FB68     	 ldr r3,[r7,#12]
 1466 0036 9A61     	 str r2,[r3,#24]
 435:../Libraries/XMCLib/src/xmc_usic.c **** }
 1467              	 .loc 2 435 0
 1468 0038 BD46     	 mov sp,r7
 1469 003a 04B0     	 add sp,sp,#16
 1470              	 
 1471 003c 80BD     	 pop {r7,pc}
 1472              	 .cfi_endproc
 1473              	.LFE138:
 1475 003e C046     	 .section .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer,"ax",%progbits
 1476              	 .align 2
 1477              	 .global XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
 1478              	 .code 16
 1479              	 .thumb_func
 1481              	XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:
 1482              	.LFB139:
 436:../Libraries/XMCLib/src/xmc_usic.c **** 
 437:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 438:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
 439:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const uint32_t service_request)
 440:../Libraries/XMCLib/src/xmc_usic.c **** {
 1483              	 .loc 2 440 0
 1484              	 .cfi_startproc
 1485 0000 80B5     	 push {r7,lr}
 1486              	.LCFI45:
 1487              	 .cfi_def_cfa_offset 8
 1488              	 .cfi_offset 7,-8
 1489              	 .cfi_offset 14,-4
 1490 0002 84B0     	 sub sp,sp,#16
 1491              	.LCFI46:
 1492              	 .cfi_def_cfa_offset 24
 1493 0004 00AF     	 add r7,sp,#0
 1494              	.LCFI47:
 1495              	 .cfi_def_cfa_register 7
 1496 0006 F860     	 str r0,[r7,#12]
 1497 0008 7A60     	 str r2,[r7,#4]
 1498 000a 0B23     	 mov r3,#11
 1499 000c FB18     	 add r3,r7,r3
 1500 000e 0A1C     	 add r2,r1,#0
 1501 0010 1A70     	 strb r2,[r3]
 441:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1502              	 .loc 2 441 0
 1503 0012 FA68     	 ldr r2,[r7,#12]
 1504 0014 8423     	 mov r3,#132
 1505 0016 5B00     	 lsl r3,r3,#1
 1506 0018 D358     	 ldr r3,[r2,r3]
 1507 001a 0B22     	 mov r2,#11
 1508 001c BA18     	 add r2,r7,r2
 1509 001e 1278     	 ldrb r2,[r2]
 1510 0020 0721     	 mov r1,#7
 1511 0022 9140     	 lsl r1,r1,r2
 1512 0024 0A1C     	 mov r2,r1
 1513 0026 D243     	 mvn r2,r2
 1514 0028 1A40     	 and r2,r3
 442:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 1515              	 .loc 2 442 0
 1516 002a 0B23     	 mov r3,#11
 1517 002c FB18     	 add r3,r7,r3
 1518 002e 1B78     	 ldrb r3,[r3]
 1519 0030 7968     	 ldr r1,[r7,#4]
 1520 0032 9940     	 lsl r1,r1,r3
 1521 0034 0B1C     	 mov r3,r1
 441:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1522              	 .loc 2 441 0
 1523 0036 1A43     	 orr r2,r3
 1524 0038 111C     	 mov r1,r2
 1525 003a FA68     	 ldr r2,[r7,#12]
 1526 003c 8423     	 mov r3,#132
 1527 003e 5B00     	 lsl r3,r3,#1
 1528 0040 D150     	 str r1,[r2,r3]
 443:../Libraries/XMCLib/src/xmc_usic.c **** }
 1529              	 .loc 2 443 0
 1530 0042 BD46     	 mov sp,r7
 1531 0044 04B0     	 add sp,sp,#16
 1532              	 
 1533 0046 80BD     	 pop {r7,pc}
 1534              	 .cfi_endproc
 1535              	.LFE139:
 1537              	 .section .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer,"ax",%progbits
 1538              	 .align 2
 1539              	 .global XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
 1540              	 .code 16
 1541              	 .thumb_func
 1543              	XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:
 1544              	.LFB140:
 444:../Libraries/XMCLib/src/xmc_usic.c **** 
 445:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 446:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
 447:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const uint32_t service_request)
 448:../Libraries/XMCLib/src/xmc_usic.c **** {
 1545              	 .loc 2 448 0
 1546              	 .cfi_startproc
 1547 0000 80B5     	 push {r7,lr}
 1548              	.LCFI48:
 1549              	 .cfi_def_cfa_offset 8
 1550              	 .cfi_offset 7,-8
 1551              	 .cfi_offset 14,-4
 1552 0002 84B0     	 sub sp,sp,#16
 1553              	.LCFI49:
 1554              	 .cfi_def_cfa_offset 24
 1555 0004 00AF     	 add r7,sp,#0
 1556              	.LCFI50:
 1557              	 .cfi_def_cfa_register 7
 1558 0006 F860     	 str r0,[r7,#12]
 1559 0008 7A60     	 str r2,[r7,#4]
 1560 000a 0B23     	 mov r3,#11
 1561 000c FB18     	 add r3,r7,r3
 1562 000e 0A1C     	 add r2,r1,#0
 1563 0010 1A70     	 strb r2,[r3]
 449:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1564              	 .loc 2 449 0
 1565 0012 FA68     	 ldr r2,[r7,#12]
 1566 0014 8623     	 mov r3,#134
 1567 0016 5B00     	 lsl r3,r3,#1
 1568 0018 D358     	 ldr r3,[r2,r3]
 1569 001a 0B22     	 mov r2,#11
 1570 001c BA18     	 add r2,r7,r2
 1571 001e 1278     	 ldrb r2,[r2]
 1572 0020 0721     	 mov r1,#7
 1573 0022 9140     	 lsl r1,r1,r2
 1574 0024 0A1C     	 mov r2,r1
 1575 0026 D243     	 mvn r2,r2
 1576 0028 1A40     	 and r2,r3
 450:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 1577              	 .loc 2 450 0
 1578 002a 0B23     	 mov r3,#11
 1579 002c FB18     	 add r3,r7,r3
 1580 002e 1B78     	 ldrb r3,[r3]
 1581 0030 7968     	 ldr r1,[r7,#4]
 1582 0032 9940     	 lsl r1,r1,r3
 1583 0034 0B1C     	 mov r3,r1
 449:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1584              	 .loc 2 449 0
 1585 0036 1A43     	 orr r2,r3
 1586 0038 111C     	 mov r1,r2
 1587 003a FA68     	 ldr r2,[r7,#12]
 1588 003c 8623     	 mov r3,#134
 1589 003e 5B00     	 lsl r3,r3,#1
 1590 0040 D150     	 str r1,[r2,r3]
 451:../Libraries/XMCLib/src/xmc_usic.c **** }
 1591              	 .loc 2 451 0
 1592 0042 BD46     	 mov sp,r7
 1593 0044 04B0     	 add sp,sp,#16
 1594              	 
 1595 0046 80BD     	 pop {r7,pc}
 1596              	 .cfi_endproc
 1597              	.LFE140:
 1599              	 .section .text.XMC_USIC_Enable,"ax",%progbits
 1600              	 .align 2
 1601              	 .global XMC_USIC_Enable
 1602              	 .code 16
 1603              	 .thumb_func
 1605              	XMC_USIC_Enable:
 1606              	.LFB141:
 452:../Libraries/XMCLib/src/xmc_usic.c **** 
 453:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Enable(XMC_USIC_t *const usic)
 454:../Libraries/XMCLib/src/xmc_usic.c **** {
 1607              	 .loc 2 454 0
 1608              	 .cfi_startproc
 1609 0000 80B5     	 push {r7,lr}
 1610              	.LCFI51:
 1611              	 .cfi_def_cfa_offset 8
 1612              	 .cfi_offset 7,-8
 1613              	 .cfi_offset 14,-4
 1614 0002 82B0     	 sub sp,sp,#8
 1615              	.LCFI52:
 1616              	 .cfi_def_cfa_offset 16
 1617 0004 00AF     	 add r7,sp,#0
 1618              	.LCFI53:
 1619              	 .cfi_def_cfa_register 7
 1620 0006 7860     	 str r0,[r7,#4]
 455:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == USIC0)
 1621              	 .loc 2 455 0
 1622 0008 7B68     	 ldr r3,[r7,#4]
 1623 000a 074A     	 ldr r2,.L73
 1624 000c 9342     	 cmp r3,r2
 1625 000e 08D1     	 bne .L70
 456:../Libraries/XMCLib/src/xmc_usic.c ****   {
 457:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 458:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 1626              	 .loc 2 458 0
 1627 0010 0820     	 mov r0,#8
 1628 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 459:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC0));
 1629              	 .loc 2 459 0
 1630 0016 C046     	 mov r8,r8
 1631              	.L72:
 1632              	 .loc 2 459 0 is_stmt 0 discriminator 1
 1633 0018 0820     	 mov r0,#8
 1634 001a FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 1635 001e 031E     	 sub r3,r0,#0
 1636 0020 FAD1     	 bne .L72
 1637              	.L70:
 460:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 461:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 462:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 463:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC0));
 464:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 465:../Libraries/XMCLib/src/xmc_usic.c ****   }
 466:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)  
 467:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC1)
 468:../Libraries/XMCLib/src/xmc_usic.c ****   {
 469:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 470:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 471:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC1));
 472:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 473:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 474:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 475:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC1));
 476:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 477:../Libraries/XMCLib/src/xmc_usic.c ****   }
 478:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 479:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)  
 480:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC2)
 481:../Libraries/XMCLib/src/xmc_usic.c ****   {
 482:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 483:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 484:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC2));
 485:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 486:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 487:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 488:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC2));
 489:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 490:../Libraries/XMCLib/src/xmc_usic.c ****   }
 491:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 492:../Libraries/XMCLib/src/xmc_usic.c ****   else
 493:../Libraries/XMCLib/src/xmc_usic.c ****   {
 494:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0/*Always*/);
 495:../Libraries/XMCLib/src/xmc_usic.c ****   }
 496:../Libraries/XMCLib/src/xmc_usic.c **** }
 1638              	 .loc 2 496 0 is_stmt 1
 1639 0022 BD46     	 mov sp,r7
 1640 0024 02B0     	 add sp,sp,#8
 1641              	 
 1642 0026 80BD     	 pop {r7,pc}
 1643              	.L74:
 1644              	 .align 2
 1645              	.L73:
 1646 0028 08000048 	 .word 1207959560
 1647              	 .cfi_endproc
 1648              	.LFE141:
 1650              	 .section .text.XMC_USIC_Disable,"ax",%progbits
 1651              	 .align 2
 1652              	 .global XMC_USIC_Disable
 1653              	 .code 16
 1654              	 .thumb_func
 1656              	XMC_USIC_Disable:
 1657              	.LFB142:
 497:../Libraries/XMCLib/src/xmc_usic.c **** 
 498:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Disable(XMC_USIC_t *const usic)
 499:../Libraries/XMCLib/src/xmc_usic.c **** {
 1658              	 .loc 2 499 0
 1659              	 .cfi_startproc
 1660 0000 80B5     	 push {r7,lr}
 1661              	.LCFI54:
 1662              	 .cfi_def_cfa_offset 8
 1663              	 .cfi_offset 7,-8
 1664              	 .cfi_offset 14,-4
 1665 0002 82B0     	 sub sp,sp,#8
 1666              	.LCFI55:
 1667              	 .cfi_def_cfa_offset 16
 1668 0004 00AF     	 add r7,sp,#0
 1669              	.LCFI56:
 1670              	 .cfi_def_cfa_register 7
 1671 0006 7860     	 str r0,[r7,#4]
 500:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == (XMC_USIC_t *)USIC0)
 1672              	 .loc 2 500 0
 1673 0008 7B68     	 ldr r3,[r7,#4]
 1674 000a 044A     	 ldr r2,.L77
 1675 000c 9342     	 cmp r3,r2
 1676 000e 02D1     	 bne .L75
 501:../Libraries/XMCLib/src/xmc_usic.c ****   {
 502:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 503:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 504:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 505:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 506:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 1677              	 .loc 2 506 0
 1678 0010 0820     	 mov r0,#8
 1679 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 1680              	.L75:
 507:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 508:../Libraries/XMCLib/src/xmc_usic.c ****   }
 509:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)  
 510:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC1)
 511:../Libraries/XMCLib/src/xmc_usic.c ****   {
 512:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 513:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 514:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 515:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 516:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 517:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 518:../Libraries/XMCLib/src/xmc_usic.c ****   }
 519:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 520:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)  
 521:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC2)
 522:../Libraries/XMCLib/src/xmc_usic.c ****   {
 523:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 524:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 525:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 526:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 527:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 528:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 529:../Libraries/XMCLib/src/xmc_usic.c ****   }
 530:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 531:../Libraries/XMCLib/src/xmc_usic.c ****   else
 532:../Libraries/XMCLib/src/xmc_usic.c ****   {
 533:../Libraries/XMCLib/src/xmc_usic.c **** 	  XMC_ASSERT("USIC module not available", 0/*Always*/);
 534:../Libraries/XMCLib/src/xmc_usic.c ****   }
 535:../Libraries/XMCLib/src/xmc_usic.c ****   
 536:../Libraries/XMCLib/src/xmc_usic.c **** }
 1681              	 .loc 2 536 0
 1682 0016 BD46     	 mov sp,r7
 1683 0018 02B0     	 add sp,sp,#8
 1684              	 
 1685 001a 80BD     	 pop {r7,pc}
 1686              	.L78:
 1687              	 .align 2
 1688              	.L77:
 1689 001c 08000048 	 .word 1207959560
 1690              	 .cfi_endproc
 1691              	.LFE142:
 1693              	 .text
 1694              	.Letext0:
 1695              	 .file 3 "c:\\users\\jrjkr\\downloads\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1696              	 .file 4 "c:\\users\\jrjkr\\downloads\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1697              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/CMSIS/Infineon/XMC1100_series/Include/XMC1100.h"
 1698              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/XMCLib/inc/xmc1_scu.h"
 1699              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/CMSIS/Include/cmsis_gcc.h"
 1700              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/HelloWorld/Libraries/CMSIS/Infineon/XMC1100_series/Include/system_XMC1100.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usic.c
    {standard input}:18     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000000 $t
    {standard input}:22     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000000 XMC_USIC_CH_SetInputTriggerCombinationMode
    {standard input}:78     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000048 $d
    {standard input}:83     .text.XMC_USIC_CH_SetBRGInputClockSource:00000000 $t
    {standard input}:87     .text.XMC_USIC_CH_SetBRGInputClockSource:00000000 XMC_USIC_CH_SetBRGInputClockSource
    {standard input}:126    .text.XMC_USIC_CH_Enable:00000000 $t
    {standard input}:131    .text.XMC_USIC_CH_Enable:00000000 XMC_USIC_CH_Enable
    {standard input}:1605   .text.XMC_USIC_Enable:00000000 XMC_USIC_Enable
    {standard input}:194    .text.XMC_USIC_CH_Enable:00000048 $d
    {standard input}:200    .text.XMC_USIC_CH_Disable:00000000 $t
    {standard input}:205    .text.XMC_USIC_CH_Disable:00000000 XMC_USIC_CH_Disable
    {standard input}:240    .text.XMC_USIC_CH_SetBaudrate:00000000 $t
    {standard input}:245    .text.XMC_USIC_CH_SetBaudrate:00000000 XMC_USIC_CH_SetBaudrate
    {standard input}:404    .text.XMC_USIC_CH_SetBaudrate:000000e4 $d
    {standard input}:411    .text.XMC_USIC_CH_SetBaudrateEx:00000000 $t
    {standard input}:416    .text.XMC_USIC_CH_SetBaudrateEx:00000000 XMC_USIC_CH_SetBaudrateEx
    {standard input}:588    .text.XMC_USIC_CH_SetBaudrateEx:00000104 $d
    {standard input}:598    .text.XMC_USIC_CH_GetBaudrate:00000000 $t
    {standard input}:603    .text.XMC_USIC_CH_GetBaudrate:00000000 XMC_USIC_CH_GetBaudrate
    {standard input}:780    .text.XMC_USIC_CH_GetBaudrate:00000128 $d
    {standard input}:785    .text.XMC_USIC_CH_GetSCLKFrequency:00000000 $t
    {standard input}:790    .text.XMC_USIC_CH_GetSCLKFrequency:00000000 XMC_USIC_CH_GetSCLKFrequency
    {standard input}:920    .text.XMC_USIC_CH_GetSCLKFrequency:000000d8 $d
    {standard input}:925    .text.XMC_USIC_CH_GetMCLKFrequency:00000000 $t
    {standard input}:930    .text.XMC_USIC_CH_GetMCLKFrequency:00000000 XMC_USIC_CH_GetMCLKFrequency
    {standard input}:1030   .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 $t
    {standard input}:1035   .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 XMC_USIC_CH_ConfigExternalInputSignalToBRG
    {standard input}:1106   .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000060 $d
    {standard input}:1111   .text.XMC_USIC_CH_TXFIFO_Configure:00000000 $t
    {standard input}:1116   .text.XMC_USIC_CH_TXFIFO_Configure:00000000 XMC_USIC_CH_TXFIFO_Configure
    {standard input}:1182   .text.XMC_USIC_CH_TXFIFO_Configure:00000054 $d
    {standard input}:1188   .text.XMC_USIC_CH_RXFIFO_Configure:00000000 $t
    {standard input}:1193   .text.XMC_USIC_CH_RXFIFO_Configure:00000000 XMC_USIC_CH_RXFIFO_Configure
    {standard input}:1261   .text.XMC_USIC_CH_RXFIFO_Configure:0000005c $d
    {standard input}:1267   .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:1272   .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
    {standard input}:1337   .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000054 $d
    {standard input}:1343   .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:1348   .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
    {standard input}:1413   .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000054 $d
    {standard input}:1419   .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 $t
    {standard input}:1424   .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 XMC_USIC_CH_SetInterruptNodePointer
    {standard input}:1476   .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:1481   .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
    {standard input}:1538   .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:1543   .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
    {standard input}:1600   .text.XMC_USIC_Enable:00000000 $t
    {standard input}:1646   .text.XMC_USIC_Enable:00000028 $d
    {standard input}:1651   .text.XMC_USIC_Disable:00000000 $t
    {standard input}:1656   .text.XMC_USIC_Disable:00000000 XMC_USIC_Disable
    {standard input}:1689   .text.XMC_USIC_Disable:0000001c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
XMC_SCU_CLOCK_GetPeripheralClockFrequency
__aeabi_idiv
__aeabi_ui2f
__aeabi_fdiv
__aeabi_fmul
__aeabi_f2uiz
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_CLOCK_IsPeripheralClockGated
XMC_SCU_CLOCK_GatePeripheralClock
